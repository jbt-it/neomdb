{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Permission": {
				"properties": {
					"directorID": {
						"type": "number",
						"format": "double"
					},
					"canDelegate": {
						"type": "boolean"
					},
					"permissionID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"canDelegate",
					"permissionID"
				],
				"type": "object",
				"description": "Type of the permission"
			},
			"JWTPayload": {
				"properties": {
					"roles": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"permissions": {
						"items": {
							"$ref": "#/components/schemas/Permission"
						},
						"type": "array"
					},
					"name": {
						"type": "string"
					},
					"mitgliedID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"roles",
					"permissions",
					"name",
					"mitgliedID"
				],
				"type": "object",
				"description": "Type of the payload if the jason web token"
			},
			"UserLoginRequest": {
				"properties": {
					"password": {
						"type": "string"
					},
					"username": {
						"type": "string"
					}
				},
				"required": [
					"password",
					"username"
				],
				"type": "object",
				"description": "Type for the request to login a user"
			},
			"UserChangePasswordRequest": {
				"properties": {
					"newPassword": {
						"type": "string"
					},
					"oldPassword": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"userID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"newPassword",
					"oldPassword",
					"userName",
					"userID"
				],
				"type": "object",
				"description": "Type of the request to change the password of a user"
			},
			"UserForgotPasswordRequest": {
				"properties": {
					"email": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"description": "Type of the request to send a password reset link to a user"
			},
			"UserResetPasswordRequest": {
				"properties": {
					"newPassword": {
						"type": "string"
					},
					"key": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"newPassword",
					"key",
					"email"
				],
				"type": "object",
				"description": "Type of the request to reset the password of a user"
			},
			"MemberPartial": {
				"properties": {
					"lastchange": {
						"type": "string"
					},
					"ressort": {
						"type": "string"
					},
					"mitgliedstatus": {
						"type": "string"
					},
					"jbt_email": {
						"type": "string"
					},
					"handy": {
						"type": "number",
						"format": "double"
					},
					"nachname": {
						"type": "string"
					},
					"vorname": {
						"type": "string"
					}
				},
				"required": [
					"lastchange",
					"ressort",
					"mitgliedstatus",
					"jbt_email",
					"handy",
					"nachname",
					"vorname"
				],
				"type": "object",
				"description": "Type of the partial member"
			},
			"DepartmentMember": {
				"properties": {
					"bezeichnung": {
						"type": "string"
					},
					"ressort": {
						"type": "string"
					},
					"nachname": {
						"type": "string"
					},
					"vorname": {
						"type": "string"
					},
					"mitgliedID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"bezeichnung",
					"ressort",
					"nachname",
					"vorname",
					"mitgliedID"
				],
				"type": "object",
				"description": "Type of a member of a department (partial member with department information)"
			},
			"Director": {
				"properties": {
					"kuerzel": {
						"type": "string"
					},
					"bezeichnung_maennlich": {
						"type": "string"
					},
					"bezeichnung_weiblich": {
						"type": "string"
					},
					"geschlecht": {
						"type": "string"
					},
					"ressortID": {
						"type": "number",
						"format": "double"
					},
					"evpostenID": {
						"type": "number",
						"format": "double"
					},
					"nachname": {
						"type": "string"
					},
					"vorname": {
						"type": "string"
					},
					"mitgliedID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"kuerzel",
					"bezeichnung_maennlich",
					"bezeichnung_weiblich",
					"geschlecht",
					"ressortID",
					"evpostenID",
					"nachname",
					"vorname",
					"mitgliedID"
				],
				"type": "object",
				"description": "Type of the director (partial member with department and role information)"
			},
			"StatusOverview": {
				"properties": {
					"wikiErrorMsg": {
						"type": "string"
					},
					"wikiSuccesful": {
						"type": "boolean"
					},
					"nextcloudErrorMsg": {
						"type": "string"
					},
					"nextcloudSuccesful": {
						"type": "boolean"
					},
					"mailListErrorMsg": {
						"type": "string"
					},
					"mailListSuccesful": {
						"type": "boolean"
					},
					"mailErrorMsg": {
						"type": "string"
					},
					"mailSuccesful": {
						"type": "boolean"
					},
					"queryErrorMsg": {
						"type": "string"
					},
					"querySuccesful": {
						"type": "boolean"
					}
				},
				"required": [
					"wikiErrorMsg",
					"wikiSuccesful",
					"nextcloudErrorMsg",
					"nextcloudSuccesful",
					"mailListErrorMsg",
					"mailListSuccesful",
					"mailErrorMsg",
					"mailSuccesful",
					"queryErrorMsg",
					"querySuccesful"
				],
				"type": "object",
				"description": "Type of the overview of the status of the different account creation operations"
			},
			"CreateMemberResponse": {
				"properties": {
					"statusOverview": {
						"$ref": "#/components/schemas/StatusOverview"
					},
					"memberID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"statusOverview",
					"memberID"
				],
				"type": "object",
				"description": "Type of the response after creating a member"
			},
			"CreateMemberRequest": {
				"properties": {
					"traineeSeit": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"generation": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"geschlecht": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"handy": {
						"type": "string",
						"nullable": true
					},
					"geburtsdatum": {
						"type": "string",
						"nullable": true
					},
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"nachname": {
						"type": "string"
					},
					"vorname": {
						"type": "string"
					}
				},
				"required": [
					"traineeSeit",
					"password",
					"generation",
					"geschlecht",
					"handy",
					"geburtsdatum",
					"email",
					"name",
					"nachname",
					"vorname"
				],
				"type": "object",
				"description": "Type of the request to create a member"
			},
			"Department": {
				"properties": {
					"linkOrganigramm": {
						"type": "string"
					},
					"linkZielvorstellung": {
						"type": "string"
					},
					"jbt_email": {
						"type": "string"
					},
					"kuerzel": {
						"type": "string"
					},
					"bezeichnung": {
						"type": "string"
					},
					"ressortID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"linkOrganigramm",
					"linkZielvorstellung",
					"jbt_email",
					"kuerzel",
					"bezeichnung",
					"ressortID"
				],
				"type": "object",
				"description": "Type of the department"
			},
			"UpdateDepartmentRequest": {
				"properties": {
					"linkOrganigramm": {
						"type": "string"
					},
					"linkZielvorstellung": {
						"type": "string"
					}
				},
				"required": [
					"linkOrganigramm",
					"linkZielvorstellung"
				],
				"type": "object",
				"description": "Type of the request to update a department"
			},
			"Value": {
				"properties": {
					"wert": {
						"type": "string"
					}
				},
				"required": [
					"wert"
				],
				"type": "object",
				"description": "Value type used for languages and edv skills"
			},
			"PermissionAssignment": {
				"properties": {
					"canDelegate": {
						"type": "boolean"
					},
					"permissionID": {
						"type": "number",
						"format": "double"
					},
					"mitgliedID": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"canDelegate",
					"permissionID",
					"mitgliedID",
					"name"
				],
				"type": "object",
				"description": "Type of the permission assignment (permission of a member or a director)"
			},
			"AssignPermissionToMemberRequest": {
				"properties": {
					"permissionID": {
						"type": "number",
						"format": "double"
					},
					"memberID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"permissionID",
					"memberID"
				],
				"type": "object"
			},
			"Language": {
				"properties": {
					"niveau": {
						"type": "number",
						"format": "double"
					},
					"wert": {
						"type": "string"
					}
				},
				"required": [
					"niveau",
					"wert"
				],
				"type": "object",
				"description": "Type of the language of a member"
			},
			"EdvSkill": {
				"properties": {
					"niveau": {
						"type": "number",
						"format": "double"
					},
					"wert": {
						"type": "string"
					}
				},
				"required": [
					"niveau",
					"wert"
				],
				"type": "object",
				"description": "Type of the edv skill of a member"
			},
			"Mentee": {
				"properties": {
					"nachname": {
						"type": "string"
					},
					"vorname": {
						"type": "string"
					},
					"mitgliedID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"nachname",
					"vorname",
					"mitgliedID"
				],
				"type": "object",
				"description": "Type of the mentee (partial member)"
			},
			"Mentor": {
				"properties": {
					"generationID": {
						"type": "number",
						"format": "double"
					},
					"nachname": {
						"type": "string"
					},
					"vorname": {
						"type": "string"
					},
					"mitgliedID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"mitgliedID"
				],
				"type": "object",
				"description": "Type of the mentor (partial member)"
			},
			"MemberDetails": {
				"properties": {
					"mentor": {
						"allOf": [
							{
								"$ref": "#/components/schemas/Mentor"
							}
						],
						"nullable": true
					},
					"mentees": {
						"items": {
							"$ref": "#/components/schemas/Mentee"
						},
						"type": "array"
					},
					"edvkenntnisse": {
						"items": {
							"$ref": "#/components/schemas/EdvSkill"
						},
						"type": "array"
					},
					"sprachen": {
						"items": {
							"$ref": "#/components/schemas/Language"
						},
						"type": "array"
					},
					"bic": {
						"type": "string"
					},
					"iban": {
						"type": "string"
					},
					"kontoinhaber": {
						"type": "string"
					},
					"ersthelferausbildung": {
						"type": "boolean"
					},
					"fuehrerschein": {
						"type": "boolean"
					},
					"lastchange": {
						"type": "string"
					},
					"canQM": {
						"type": "string",
						"nullable": true
					},
					"canPL": {
						"type": "string",
						"nullable": true
					},
					"engagement": {
						"type": "string",
						"nullable": true
					},
					"ausbildung": {
						"type": "string",
						"nullable": true
					},
					"vertiefungen": {
						"type": "string",
						"nullable": true
					},
					"studienende": {
						"type": "string",
						"nullable": true
					},
					"studienbeginn": {
						"type": "string",
						"nullable": true
					},
					"studiengang": {
						"type": "string"
					},
					"hochschule": {
						"type": "string"
					},
					"email2": {
						"type": "string",
						"nullable": true
					},
					"tel2": {
						"type": "string",
						"nullable": true
					},
					"ort2": {
						"type": "string",
						"nullable": true
					},
					"plz2": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"strasse2": {
						"type": "string",
						"nullable": true
					},
					"email1": {
						"type": "string",
						"nullable": true
					},
					"tel1": {
						"type": "string",
						"nullable": true
					},
					"ort1": {
						"type": "string"
					},
					"plz1": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"strasse1": {
						"type": "string"
					},
					"arbeitgeber": {
						"type": "string",
						"nullable": true
					},
					"ressort": {
						"type": "string"
					},
					"ausgetreten_seit": {
						"type": "string",
						"nullable": true
					},
					"passiv_seit": {
						"type": "string",
						"nullable": true
					},
					"aktiv_seit": {
						"type": "string",
						"nullable": true
					},
					"senior_seit": {
						"type": "string",
						"nullable": true
					},
					"alumnus_seit": {
						"type": "string",
						"nullable": true
					},
					"mitglied_seit": {
						"type": "string",
						"nullable": true
					},
					"trainee_seit": {
						"type": "string",
						"nullable": true
					},
					"internesprojekt": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"generation": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"mitgliedstatus": {
						"type": "string"
					},
					"jbt_email": {
						"type": "string"
					},
					"handy": {
						"type": "string"
					},
					"geburtsdatum": {
						"type": "string",
						"nullable": true
					},
					"geschlecht": {
						"type": "number",
						"format": "double"
					},
					"vorname": {
						"type": "string"
					},
					"nachname": {
						"type": "string"
					},
					"mitgliedID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"ersthelferausbildung",
					"fuehrerschein",
					"lastchange",
					"canQM",
					"canPL",
					"engagement",
					"ausbildung",
					"vertiefungen",
					"studienende",
					"studienbeginn",
					"studiengang",
					"hochschule",
					"email2",
					"tel2",
					"ort2",
					"plz2",
					"strasse2",
					"email1",
					"tel1",
					"ort1",
					"plz1",
					"strasse1",
					"arbeitgeber",
					"ressort",
					"ausgetreten_seit",
					"passiv_seit",
					"aktiv_seit",
					"senior_seit",
					"alumnus_seit",
					"mitglied_seit",
					"trainee_seit",
					"internesprojekt",
					"generation",
					"mitgliedstatus",
					"jbt_email",
					"handy",
					"geburtsdatum",
					"geschlecht",
					"vorname",
					"nachname",
					"mitgliedID"
				],
				"type": "object",
				"description": "Type of member with additional data (languages, mentor, mentee, edvskills)"
			},
			"Trainee": {
				"properties": {
					"generation": {
						"type": "number",
						"format": "double"
					},
					"nachname": {
						"type": "string"
					},
					"vorname": {
						"type": "string"
					},
					"mitgliedID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"generation",
					"nachname",
					"vorname",
					"mitgliedID"
				],
				"type": "object",
				"description": "Type of a trainee (partial member)"
			},
			"InternalProject": {
				"properties": {
					"DLBeiEV": {
						"type": "boolean"
					},
					"APGehalten": {
						"type": "string"
					},
					"APBeiEV": {
						"type": "boolean"
					},
					"ZPGehalten": {
						"type": "string"
					},
					"ZPBeiEV": {
						"type": "boolean"
					},
					"AngebotBeiEV": {
						"type": "boolean"
					},
					"kickoff": {
						"type": "string"
					},
					"kuerzel": {
						"type": "string"
					},
					"projektname": {
						"type": "string"
					},
					"generation": {
						"type": "number",
						"format": "double"
					},
					"internesProjektID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"DLBeiEV",
					"APGehalten",
					"APBeiEV",
					"ZPGehalten",
					"ZPBeiEV",
					"AngebotBeiEV",
					"kickoff",
					"kuerzel",
					"projektname",
					"generation",
					"internesProjektID"
				],
				"type": "object",
				"description": "Type of the internal project of a member"
			},
			"TraineeChoice": {
				"properties": {
					"wahl_ressort3": {
						"type": "number",
						"format": "double"
					},
					"wahl_ressort2": {
						"type": "number",
						"format": "double"
					},
					"wahl_ressort1": {
						"type": "number",
						"format": "double"
					},
					"wahl_ressort": {
						"type": "number",
						"format": "double"
					},
					"wahl_internesprojekt3": {
						"type": "number",
						"format": "double"
					},
					"wahl_internesprojekt2": {
						"type": "number",
						"format": "double"
					},
					"wahl_internesprojekt1": {
						"type": "number",
						"format": "double"
					},
					"wahl_internesprojekt": {
						"type": "number",
						"format": "double"
					},
					"wahl_mentor3": {
						"type": "number",
						"format": "double"
					},
					"wahl_mentor2": {
						"type": "number",
						"format": "double"
					},
					"wahl_mentor1": {
						"type": "number",
						"format": "double"
					},
					"wahl_mentor": {
						"type": "number",
						"format": "double"
					},
					"nachname": {
						"type": "string"
					},
					"vorname": {
						"type": "string"
					},
					"mitgliedID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"wahl_ressort3",
					"wahl_ressort2",
					"wahl_ressort1",
					"wahl_ressort",
					"wahl_internesprojekt3",
					"wahl_internesprojekt2",
					"wahl_internesprojekt1",
					"wahl_internesprojekt",
					"wahl_mentor3",
					"wahl_mentor2",
					"wahl_mentor1",
					"wahl_mentor",
					"nachname",
					"vorname",
					"mitgliedID"
				],
				"type": "object",
				"description": "Type of the trainee choice of a member"
			},
			"JBTMail": {
				"properties": {
					"email": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"description": "Type of the jbt mail of a member"
			},
			"Generation": {
				"properties": {
					"wahl_ende": {
						"type": "string",
						"format": "date-time"
					},
					"wahl_start": {
						"type": "string",
						"format": "date-time"
					},
					"tuercode": {
						"type": "number",
						"format": "double"
					},
					"infoabendBesucher": {
						"type": "number",
						"format": "double"
					},
					"auswahlWETermin": {
						"type": "string"
					},
					"wwTermin": {
						"type": "string"
					},
					"bewerbung_ende": {
						"type": "string",
						"format": "date-time"
					},
					"bewerbung_start": {
						"type": "string",
						"format": "date-time"
					},
					"bezeichnung": {
						"type": "string"
					},
					"generationID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"wahl_ende",
					"wahl_start",
					"tuercode",
					"infoabendBesucher",
					"auswahlWETermin",
					"wwTermin",
					"bewerbung_ende",
					"bewerbung_start",
					"bezeichnung",
					"generationID"
				],
				"type": "object",
				"description": "Type of the generation"
			},
			"TraineeMotivation": {
				"properties": {
					"wahl_internesprojekt3_motivation": {
						"type": "string"
					},
					"wahl_internesprojekt2_motivation": {
						"type": "string"
					},
					"wahl_internesprojekt1_motivation": {
						"type": "string"
					},
					"mitgliedID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"wahl_internesprojekt3_motivation",
					"wahl_internesprojekt2_motivation",
					"wahl_internesprojekt1_motivation",
					"mitgliedID"
				],
				"type": "object",
				"description": "Type of the trainee motivation written by a trainee to explain the choice of an internal project"
			},
			"UpdateVotingDeadlinesRequest": {
				"properties": {
					"votingEnd": {
						"type": "string"
					},
					"votingStart": {
						"type": "string"
					}
				},
				"required": [
					"votingEnd",
					"votingStart"
				],
				"type": "object",
				"description": "Type of the request to update the voting deadlines of a generation"
			},
			"TraineeAssignment": {
				"properties": {
					"departmentID": {
						"type": "number",
						"format": "double"
					},
					"mentorID": {
						"type": "number",
						"format": "double"
					},
					"ipID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"departmentID",
					"mentorID",
					"ipID"
				],
				"type": "object",
				"description": "Type of the assignment of a trainee to an internal project, mentor and department"
			},
			"InternalProjectAndTrainee": {
				"properties": {
					"DLbeiEV": {
						"type": "boolean"
					},
					"APgehalten": {
						"type": "string"
					},
					"APbeiEV": {
						"type": "boolean"
					},
					"ZPgehalten": {
						"type": "string"
					},
					"ZPbeiEV": {
						"type": "boolean"
					},
					"AngebotBeiEV": {
						"type": "boolean"
					},
					"kuerzel": {
						"type": "string"
					},
					"projektname": {
						"type": "string"
					},
					"internesprojekt": {
						"type": "number",
						"format": "double"
					},
					"generation": {
						"type": "number",
						"format": "double"
					},
					"nachname": {
						"type": "string"
					},
					"vorname": {
						"type": "string"
					},
					"mitgliedID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"DLbeiEV",
					"APgehalten",
					"APbeiEV",
					"ZPgehalten",
					"ZPbeiEV",
					"AngebotBeiEV",
					"kuerzel",
					"projektname",
					"internesprojekt",
					"generation",
					"nachname",
					"vorname",
					"mitgliedID"
				],
				"type": "object",
				"description": "Type of the milestones during internal project for trainee"
			},
			"Workshop": {
				"properties": {
					"feedbackAbgegeben": {
						"type": "number",
						"format": "double"
					},
					"schulungsname": {
						"type": "string"
					},
					"schulungsinstanzID": {
						"type": "number",
						"format": "double"
					},
					"mitgliedID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"feedbackAbgegeben",
					"schulungsname",
					"schulungsinstanzID",
					"mitgliedID"
				],
				"type": "object",
				"description": "Type of the given feedback on obligatory workshop for trainees"
			},
			"TraineeProgress": {
				"allOf": [
					{
						"$ref": "#/components/schemas/InternalProjectAndTrainee"
					},
					{
						"$ref": "#/components/schemas/Workshop"
					}
				],
				"description": "Type of the progress of a trainee (consists of internal project, trainee and workshop)"
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "server",
		"version": "0.1.0",
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/JWTPayload"
								}
							}
						}
					}
				},
				"description": "Sends an httpOnly cookie to the client and retrieves id, username and corresponding permissions",
				"summary": "Logs in a user",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserLoginRequest"
							},
							"example": {
								"username": "w.luft",
								"password": "s3cre7"
							}
						}
					}
				}
			}
		},
		"/auth/me": {
			"get": {
				"operationId": "GetUserData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/JWTPayload"
								}
							}
						}
					}
				},
				"description": "Sends the user data of the currently logged in user to the client",
				"summary": "Retrieves own user data",
				"tags": [
					"Auth"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/auth/change-password": {
			"patch": {
				"operationId": "ChangePassword",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Updates the passwordHash in the database if the old password is correct",
				"summary": "Changes the users password",
				"tags": [
					"Auth"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserChangePasswordRequest"
							},
							"example": {
								"userName": "w.luft",
								"oldPassword": "s3cre7",
								"newPassword": "s3cre7",
								"userID": 8167
							}
						}
					}
				}
			}
		},
		"/auth/forgot-password": {
			"post": {
				"operationId": "SendPasswordResetLink",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "An email is sent with an password reset link and a key in the url to the user\r\nThe key used in the link is saved in the databse for the later verification",
				"summary": "Sends a password reset link to the user",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserForgotPasswordRequest"
							},
							"example": {
								"email": "w.luft@studentische-beratung.de"
							}
						}
					}
				}
			}
		},
		"/auth/reset-forgot-password": {
			"patch": {
				"operationId": "ResetPasswordWithKey",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "The user can set a new password by entering their mailadress and a new password\r\nThe mail and the key in the url are then checked to se if it is a valid pair\r\nIf the pair is valid the new password is stored",
				"summary": "Resets the password of a user",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserResetPasswordRequest"
							},
							"example": {
								"email": "w.luft@studentische-beratung.de",
								"key": "1234567890",
								"newPassword": "s3cre7"
							}
						}
					}
				}
			}
		},
		"/auth/logout": {
			"post": {
				"operationId": "Logout",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Logs the user out by removing the jwt from the cookie",
				"summary": "Logs out the user",
				"tags": [
					"Auth"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/members": {
			"get": {
				"operationId": "GetMembers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/MemberPartial"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves a list of all members",
				"summary": "Get all members",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreeateMember",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreateMemberResponse"
								}
							}
						}
					}
				},
				"description": "Creates a new member in the database and creates accounts\r\nfor the different systems (exchange, mediawiki)",
				"summary": "Create a new member",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": [
							"1"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "The member to create",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateMemberRequest",
								"description": "The member to create"
							},
							"example": {
								"vorname": "Max",
								"nachname": "Mustermann",
								"name": "m.mustermann",
								"geburtsdatum": "1990-01-01",
								"password": "s3cre7-123",
								"handy": "0123456789",
								"geschlecht": 1,
								"generation": 3,
								"traineeSeit": "2020-01-01",
								"email": "m.mustermann@email.de"
							}
						}
					}
				}
			}
		},
		"/members/department-members": {
			"get": {
				"operationId": "GetMembersOfDepartments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/DepartmentMember"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all members of the departments (this does not invclude the director of a department)",
				"summary": "Get all members of departments",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/members/directors": {
			"get": {
				"operationId": "GetDirectors",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Director"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all current directors (if query parameter `current` is true) or all directors",
				"summary": "Get directors",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Query parameter to specify if only the current directors should be retrieved",
						"in": "query",
						"name": "current",
						"required": true,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/members/{id}/status": {
			"patch": {
				"operationId": "UpdateMemberStatus",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Updates the status of an existing member\r\nUpdate can be done by members with certain permission\r\nUpdate can be done by member himself with an additional permission",
				"summary": "Update the status of a member",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": [
							"1"
						]
					}
				],
				"parameters": [
					{
						"description": "The id of the member to update",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "The new status of the member",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"mitgliedstatus": {
										"type": "string"
									}
								},
								"required": [
									"mitgliedstatus"
								],
								"type": "object",
								"description": "The new status of the member"
							},
							"example": {
								"mitgliedstatus": "aktives Mitglied"
							}
						}
					}
				}
			}
		},
		"/members/departments": {
			"get": {
				"operationId": "GetDepartments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Department"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all departments",
				"summary": "Get departments",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/members/departments/{id}": {
			"put": {
				"operationId": "UpdateDepartment",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateDepartmentRequest"
							}
						}
					}
				}
			}
		},
		"/members/languages": {
			"get": {
				"operationId": "GetLanguages",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Value"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves the language values",
				"summary": "Get languages",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/members/edv-skills": {
			"get": {
				"operationId": "GetEDVSkills",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Value"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves the edv skills",
				"summary": "Get edv skills",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/members/permission-assignments": {
			"get": {
				"operationId": "GetPermissionAssignments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/PermissionAssignment"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all directors and members permission assignments",
				"summary": "Get permission assignments",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/members/permissions": {
			"get": {
				"operationId": "GetPermissions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Permission"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves name, description and ID of all permissions",
				"summary": "Get permissions",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "AssignPermissionToMember",
				"responses": {
					"201": {
						"description": ""
					}
				},
				"description": "Create new permission for member",
				"summary": "Create permission",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "The permission to create",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AssignPermissionToMemberRequest",
								"description": "The permission to create"
							},
							"example": {
								"memberID": 8167,
								"permissionID": 8
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "UnassignPermissionFromMember",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete issued permission from member",
				"summary": "Delete permission",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "The permission to delete",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AssignPermissionToMemberRequest",
								"description": "The permission to delete"
							},
							"example": {
								"memberID": 8167,
								"permissionID": 8
							}
						}
					}
				}
			}
		},
		"/members/{id}/permissions": {
			"get": {
				"operationId": "GetPermissionsByMemberID",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"permissions": {
											"items": {
												"$ref": "#/components/schemas/Permission"
											},
											"type": "array"
										}
									},
									"required": [
										"permissions"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Retrieves a list of all permissions of the member with the given ID",
				"summary": "Get permissions by member id",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "The id of the member to retrieve the permissions from",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/members/{id}": {
			"get": {
				"operationId": "GetMember",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MemberDetails"
								}
							}
						}
					}
				},
				"description": "Retrieves a member specified by id\r\nReturns financial data iff member has permission or is himself",
				"summary": "Get single member by id",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "The id of the member to retrieve",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateMember",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Updates the information of an existing member. Update of critical fields can be done by member with certain permission.\r\nUpdate of critical and non critical fields can be done by member himself with additional permission",
				"summary": "Update a member",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "The id of the member to update",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "The new information of the member",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MemberDetails",
								"description": "The new information of the member"
							},
							"example": {
								"mitgliedID": 8111,
								"vorname": "Brandon-Lee",
								"nachname": "Frye",
								"jbt_email": "b.frye@studentische-beratung.de",
								"geschlecht": 1,
								"geburtsdatum": "1990-06-05",
								"handy": "0162/9846320",
								"mitgliedstatus": "passives Mitglied",
								"generation": null,
								"internesprojekt": null,
								"trainee_seit": "2011-04-30",
								"mitglied_seit": "2012-11-30",
								"alumnus_seit": null,
								"senior_seit": null,
								"aktiv_seit": "2012-11-30",
								"passiv_seit": null,
								"ausgetreten_seit": null,
								"ressort": "Mitglieder",
								"arbeitgeber": "Versicherung Deutschland",
								"strasse1": "Woodsman Ave 61",
								"plz1": "70364",
								"ort1": "Stuttgart",
								"tel1": null,
								"email1": "brandon-lee@gmx.de",
								"strasse2": "Budapester Straße 96",
								"plz2": "56370",
								"ort2": "Rheinland-Pfalz",
								"tel2": "07042/984365",
								"email2": "brandon-lee@gmx.de",
								"hochschule": "Universität Hohenheim",
								"studiengang": "Master of Financial Management",
								"studienbeginn": "2014-09-30T22:00:00.000Z",
								"studienende": null,
								"vertiefungen": "Controlling und Unternehmensrechnung",
								"ausbildung": null,
								"engagement": null,
								"canPL": "2013-12-22",
								"canQM": "2013-12-22",
								"lastchange": "1899-11-29",
								"fuehrerschein": false,
								"ersthelferausbildung": false,
								"mentor": null,
								"mentees": [],
								"sprachen": [
									{
										"wert": "Deutsch",
										"niveau": 5
									},
									{
										"wert": "English",
										"niveau": 3
									},
									{
										"wert": "Französisch",
										"niveau": 1
									}
								],
								"edvkenntnisse": [
									{
										"wert": "MS-Office",
										"niveau": 3
									},
									{
										"wert": "PHP",
										"niveau": 1
									}
								]
							}
						}
					}
				}
			}
		},
		"/trainees": {
			"get": {
				"operationId": "GetTrainees",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Trainee"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all current trainees",
				"summary": "Get current trainees",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/trainees/ip/{id}": {
			"get": {
				"operationId": "GetIP",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalProject"
								}
							}
						}
					}
				},
				"description": "Retrieves a single internal project by id",
				"summary": "Get an internal project",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "id of the internal project",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateIP",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Updates an internal project by id",
				"summary": "Update an internal project",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"15"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the internal project",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "updated internal project",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InternalProject",
								"description": "updated internal project"
							},
							"example": {
								"DLBeiEV": true,
								"APGehalten": "2021-01-01",
								"APBeiEV": true,
								"ZPGehalten": "2021-01-01",
								"ZPBeiEV": true,
								"AngebotBeiEV": true,
								"kickoff": "2021-01-01",
								"kuerzel": "string",
								"projektname": "string-long",
								"generation": 3,
								"internesProjektID": 62
							}
						}
					}
				}
			}
		},
		"/trainees/generations/{id}/trainee-choices": {
			"get": {
				"operationId": "GetTraineeChoicesOfGeneration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TraineeChoice"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves choices of mentor, internal project and department of all trainees of given generation",
				"summary": "Get trainee choices",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the generation",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/trainees/ip/{id}/mails": {
			"get": {
				"operationId": "GetIPTeamMails",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/JBTMail"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves the mails for the specified internal projects",
				"summary": "Get ip team mails",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "id of the internal project",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/trainees/generations": {
			"get": {
				"operationId": "GetGenerations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Generation"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves information about all generations",
				"summary": "Get generations",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": []
			}
		},
		"/trainees/generations/{id}/motivation": {
			"get": {
				"operationId": "GetTraineeMotivation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TraineeMotivation"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Gets letter of motivation form trainees of given generation",
				"summary": "Get trainee motivations",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the generation",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/trainees/generations/{id}/set-deadline": {
			"post": {
				"operationId": "SetVotingDeadline",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Sets \"wahl_start\" and \"wahl_ende\" for generation",
				"summary": "Set voting deadline",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the generation",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "start and end date of the voting",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateVotingDeadlinesRequest",
								"description": "start and end date of the voting"
							},
							"example": {
								"votingStart": "2021-01-01",
								"votingEnd": "2021-01-01"
							}
						}
					}
				}
			}
		},
		"/trainees/{id}/assignment": {
			"patch": {
				"operationId": "SetTraineeAssignment",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Sets choices of internesprojekt, mentor and department of member",
				"summary": "Set trainee assignment",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the trainee",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "assignment of the trainee",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TraineeAssignment",
								"description": "assignment of the trainee"
							},
							"example": {
								"memberID": 8167,
								"ipID": 62,
								"mentorID": 8167,
								"departmentID": 1
							}
						}
					}
				}
			}
		},
		"/trainees/generations/{id}/mentors": {
			"get": {
				"operationId": "GetMentorsOfGeneration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Mentor"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all internal projects of a generation",
				"summary": "Get internal projects",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the generation",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/trainees/generations/{id}/add-mentor/{memberID}": {
			"post": {
				"operationId": "AddMentor",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Adds a mentor to a generation",
				"summary": "Add mentor",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the generation",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "id of the mentor",
						"in": "path",
						"name": "memberID",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/trainees/generations/{id}/internal-projects": {
			"get": {
				"operationId": "GetInternalProjectsOfGeneration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/InternalProject"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all internal projects of a generation",
				"summary": "Get internal projects",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the generation",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/trainees/ips/current": {
			"get": {
				"operationId": "GetCurrentIPs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/InternalProject"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all current IPs",
				"summary": "Get current IPs",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/trainees/ips/all": {
			"get": {
				"operationId": "GetAllIPs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/InternalProject"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all IPs",
				"summary": "Get all IPs",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/trainees/generations/{id}/trainee-progress": {
			"get": {
				"operationId": "GetTraineeProgress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TraineeProgress"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all milestones of internal projects and workshop feedback of a generation",
				"summary": "Get progress of the trainee generation",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the generation",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}