{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"PermissionDTO": {
				"properties": {
					"directorId": {
						"type": "number",
						"format": "double"
					},
					"canDelegate": {
						"type": "boolean"
					},
					"permissionId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"canDelegate",
					"permissionId"
				],
				"type": "object",
				"description": "Type of the permission"
			},
			"JWTPayload": {
				"properties": {
					"roles": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"permissions": {
						"items": {
							"$ref": "#/components/schemas/PermissionDTO"
						},
						"type": "array"
					},
					"name": {
						"type": "string"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"roles",
					"permissions",
					"name",
					"memberId"
				],
				"type": "object",
				"description": "Type of the payload of the json web token"
			},
			"UserLoginRequest": {
				"properties": {
					"password": {
						"type": "string"
					},
					"username": {
						"type": "string"
					}
				},
				"required": [
					"password",
					"username"
				],
				"type": "object",
				"description": "Type for the request to login a user"
			},
			"UserChangePasswordRequest": {
				"properties": {
					"newPassword": {
						"type": "string"
					},
					"oldPassword": {
						"type": "string"
					},
					"userName": {
						"type": "string"
					},
					"userID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"newPassword",
					"oldPassword",
					"userName",
					"userID"
				],
				"type": "object",
				"description": "Type of the request to change the password of a user"
			},
			"UserForgotPasswordRequest": {
				"properties": {
					"email": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"description": "Type of the request to send a password reset link to a user"
			},
			"UserResetPasswordRequest": {
				"properties": {
					"newPassword": {
						"type": "string"
					},
					"key": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"newPassword",
					"key",
					"email"
				],
				"type": "object",
				"description": "Type of the request to reset the password of a user"
			},
			"Member": {
				"properties": {
					"memberId": {
						"type": "number",
						"format": "double"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"passwordHash": {
						"type": "string",
						"nullable": true
					},
					"password": {
						"type": "string",
						"nullable": true
					},
					"icalToken": {
						"type": "string",
						"nullable": true
					},
					"gender": {
						"type": "boolean",
						"nullable": true
					},
					"birthday": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"mobile": {
						"type": "string",
						"nullable": true
					},
					"fax": {
						"type": "string",
						"nullable": true
					},
					"jbtEmail": {
						"type": "string",
						"nullable": true
					},
					"memberStatusId": {
						"type": "number",
						"format": "double"
					},
					"generationId": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"internalProjectId": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"internalProjectOld": {
						"type": "string",
						"nullable": true
					},
					"mentorId": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"traineeSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"memberSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"alumnusSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"seniorSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"activeSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"passiveSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"exitedSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"departmentId": {
						"type": "number",
						"format": "double"
					},
					"employer": {
						"type": "string",
						"nullable": true
					},
					"street1": {
						"type": "string",
						"nullable": true
					},
					"postalCode1": {
						"type": "string",
						"nullable": true
					},
					"city1": {
						"type": "string",
						"nullable": true
					},
					"phone1": {
						"type": "string",
						"nullable": true
					},
					"email1": {
						"type": "string",
						"nullable": true
					},
					"street2": {
						"type": "string",
						"nullable": true
					},
					"postalCode2": {
						"type": "string",
						"nullable": true
					},
					"city2": {
						"type": "string",
						"nullable": true
					},
					"phone2": {
						"type": "string",
						"nullable": true
					},
					"email2": {
						"type": "string"
					},
					"university": {
						"type": "string",
						"nullable": true
					},
					"courseOfStudy": {
						"type": "string",
						"nullable": true
					},
					"studyStart": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"studyEnd": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"specializations": {
						"type": "string",
						"nullable": true
					},
					"apprenticeship": {
						"type": "string",
						"nullable": true
					},
					"accountHolder": {
						"type": "string",
						"nullable": true
					},
					"iban": {
						"type": "string",
						"nullable": true
					},
					"bic": {
						"type": "string",
						"nullable": true
					},
					"commitment": {
						"type": "string",
						"nullable": true
					},
					"remarks": {
						"type": "string",
						"nullable": true
					},
					"departure": {
						"type": "string",
						"nullable": true
					},
					"departureDate": {
						"type": "string",
						"nullable": true
					},
					"picture": {
						"type": "string",
						"nullable": true
					},
					"canPL": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"canQM": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"lastChange": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"otherWs": {
						"type": "string",
						"nullable": true
					},
					"drivingLicense": {
						"type": "number",
						"format": "double"
					},
					"drivingLicense2": {
						"type": "number",
						"format": "double"
					},
					"drivingLicense3": {
						"type": "number",
						"format": "double"
					},
					"firstAidTraining": {
						"type": "boolean"
					},
					"choiceMentor": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"choiceMentor1": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"choiceMentor2": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"choiceMentor3": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"choiceInternalProject": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"choiceInternalProject1": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"choiceInternalProject1Motivation": {
						"type": "string",
						"nullable": true
					},
					"choiceInternalProject2": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"choiceInternalProject2Motivation": {
						"type": "string",
						"nullable": true
					},
					"choiceInternalProject3": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"choiceInternalProject3Motivation": {
						"type": "string",
						"nullable": true
					},
					"choiceDepartment": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"choiceDepartment1": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"choiceDepartment2": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"choiceDepartment3": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"notes": {
						"type": "string",
						"nullable": true
					},
					"itSkills": {
						"items": {
							"$ref": "#/components/schemas/ItSkill"
						},
						"type": "array"
					},
					"generations": {
						"items": {
							"$ref": "#/components/schemas/Generation"
						},
						"type": "array"
					},
					"internalProjectsAsQm": {
						"items": {
							"$ref": "#/components/schemas/InternalProject"
						},
						"type": "array"
					},
					"generation": {
						"$ref": "#/components/schemas/Generation"
					},
					"mentor": {
						"$ref": "#/components/schemas/Member"
					},
					"mentees": {
						"items": {
							"$ref": "#/components/schemas/Member"
						},
						"type": "array"
					},
					"memberStatus": {
						"$ref": "#/components/schemas/MemberStatus"
					},
					"department": {
						"$ref": "#/components/schemas/Department"
					},
					"memberHasOtherPositions": {
						"items": {
							"$ref": "#/components/schemas/MemberHasOtherPosition"
						},
						"type": "array"
					},
					"permissions": {
						"items": {
							"$ref": "#/components/schemas/Permission"
						},
						"type": "array"
					},
					"memberHasEvents": {
						"items": {
							"$ref": "#/components/schemas/MemberHasEvent"
						},
						"type": "array"
					},
					"memberHasEventwws": {
						"items": {
							"$ref": "#/components/schemas/MemberHasEventWw"
						},
						"type": "array"
					},
					"memberHasDirectorPositions": {
						"items": {
							"$ref": "#/components/schemas/MemberHasDirectorPosition"
						},
						"type": "array"
					},
					"memberHasExpertises": {
						"items": {
							"$ref": "#/components/schemas/MemberHasExpertise"
						},
						"type": "array"
					},
					"memberHasProjects": {
						"items": {
							"$ref": "#/components/schemas/MemberHasProject"
						},
						"type": "array"
					},
					"memberHasWorkshopInstances": {
						"items": {
							"$ref": "#/components/schemas/MemberHasWorkshopInstance"
						},
						"type": "array"
					},
					"memberHasStatuses": {
						"items": {
							"$ref": "#/components/schemas/MemberHasStatus"
						},
						"type": "array"
					},
					"mmtrackings": {
						"items": {
							"$ref": "#/components/schemas/Mmtracking"
						},
						"type": "array"
					},
					"passwordReset": {
						"$ref": "#/components/schemas/PasswordReset"
					},
					"internships": {
						"items": {
							"$ref": "#/components/schemas/Internship"
						},
						"type": "array"
					},
					"workshopFeedbackHasMembers": {
						"items": {
							"$ref": "#/components/schemas/WorkshopFeedbackHasMember"
						},
						"type": "array"
					},
					"languages": {
						"items": {
							"$ref": "#/components/schemas/Language"
						},
						"type": "array"
					},
					"traineeApplicants": {
						"items": {
							"$ref": "#/components/schemas/TraineeApplicant"
						},
						"type": "array"
					},
					"internalProject": {
						"$ref": "#/components/schemas/InternalProject"
					}
				},
				"required": [
					"memberId",
					"firstName",
					"lastName",
					"name",
					"passwordHash",
					"password",
					"icalToken",
					"gender",
					"birthday",
					"mobile",
					"fax",
					"jbtEmail",
					"memberStatusId",
					"generationId",
					"internalProjectId",
					"internalProjectOld",
					"mentorId",
					"traineeSince",
					"memberSince",
					"alumnusSince",
					"seniorSince",
					"activeSince",
					"passiveSince",
					"exitedSince",
					"departmentId",
					"employer",
					"street1",
					"postalCode1",
					"city1",
					"phone1",
					"email1",
					"street2",
					"postalCode2",
					"city2",
					"phone2",
					"email2",
					"university",
					"courseOfStudy",
					"studyStart",
					"studyEnd",
					"specializations",
					"apprenticeship",
					"accountHolder",
					"iban",
					"bic",
					"commitment",
					"remarks",
					"departure",
					"departureDate",
					"picture",
					"canPL",
					"canQM",
					"lastChange",
					"otherWs",
					"drivingLicense",
					"drivingLicense2",
					"drivingLicense3",
					"firstAidTraining",
					"choiceMentor",
					"choiceMentor1",
					"choiceMentor2",
					"choiceMentor3",
					"choiceInternalProject",
					"choiceInternalProject1",
					"choiceInternalProject1Motivation",
					"choiceInternalProject2",
					"choiceInternalProject2Motivation",
					"choiceInternalProject3",
					"choiceInternalProject3Motivation",
					"choiceDepartment",
					"choiceDepartment1",
					"choiceDepartment2",
					"choiceDepartment3",
					"notes",
					"itSkills",
					"generations",
					"internalProjectsAsQm",
					"generation",
					"mentor",
					"mentees",
					"memberStatus",
					"department",
					"memberHasOtherPositions",
					"permissions",
					"memberHasEvents",
					"memberHasEventwws",
					"memberHasDirectorPositions",
					"memberHasExpertises",
					"memberHasProjects",
					"memberHasWorkshopInstances",
					"memberHasStatuses",
					"mmtrackings",
					"passwordReset",
					"internships",
					"workshopFeedbackHasMembers",
					"languages",
					"traineeApplicants",
					"internalProject"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ItSkill": {
				"properties": {
					"memberId": {
						"type": "number",
						"format": "double"
					},
					"value": {
						"type": "string"
					},
					"level": {
						"type": "number",
						"format": "double"
					},
					"member": {
						"$ref": "#/components/schemas/Member"
					}
				},
				"required": [
					"memberId",
					"value",
					"level",
					"member"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Generation": {
				"properties": {
					"generationId": {
						"type": "number",
						"format": "double"
					},
					"description": {
						"type": "string"
					},
					"applicationStart": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"applicationEnd": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"wwDate": {
						"type": "string",
						"nullable": true
					},
					"selectionWeDate": {
						"type": "string",
						"nullable": true
					},
					"infoEveningVisitors": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"doorCode": {
						"type": "string",
						"nullable": true
					},
					"electionStart": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"electionEnd": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"mentors": {
						"items": {
							"$ref": "#/components/schemas/Member"
						},
						"type": "array"
					},
					"members": {
						"items": {
							"$ref": "#/components/schemas/Member"
						},
						"type": "array"
					},
					"traineeApplicants": {
						"items": {
							"$ref": "#/components/schemas/TraineeApplicant"
						},
						"type": "array"
					},
					"internalProjects": {
						"items": {
							"$ref": "#/components/schemas/InternalProject"
						},
						"type": "array"
					}
				},
				"required": [
					"generationId",
					"description",
					"applicationStart",
					"applicationEnd",
					"wwDate",
					"selectionWeDate",
					"infoEveningVisitors",
					"doorCode",
					"electionStart",
					"electionEnd",
					"mentors",
					"members",
					"traineeApplicants",
					"internalProjects"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TraineeApplicant": {
				"properties": {
					"traineeApplicantId": {
						"type": "number",
						"format": "double"
					},
					"generation": {
						"type": "number",
						"format": "double"
					},
					"applicationDate": {
						"type": "string",
						"format": "date-time"
					},
					"invited": {
						"type": "boolean"
					},
					"toBeAdmitted": {
						"type": "boolean"
					},
					"admitted": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"firstName": {
						"type": "string",
						"nullable": true
					},
					"lastName": {
						"type": "string",
						"nullable": true
					},
					"gender": {
						"type": "boolean",
						"nullable": true
					},
					"picture": {
						"type": "string",
						"nullable": true
					},
					"birthDate": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"mobilePhone": {
						"type": "string",
						"nullable": true
					},
					"landlinePhone": {
						"type": "string",
						"nullable": true
					},
					"email": {
						"type": "string",
						"nullable": true
					},
					"homeAddressStreet": {
						"type": "string",
						"nullable": true
					},
					"homeAddressNumber": {
						"type": "string",
						"nullable": true
					},
					"homeAddressPostalCode": {
						"type": "string",
						"nullable": true
					},
					"homeAddressCity": {
						"type": "string",
						"nullable": true
					},
					"studyAddressStreet": {
						"type": "string",
						"nullable": true
					},
					"studyAddressNumber": {
						"type": "string",
						"nullable": true
					},
					"studyAddressPostalCode": {
						"type": "string",
						"nullable": true
					},
					"studyAddressCity": {
						"type": "string",
						"nullable": true
					},
					"enrolledDegree": {
						"type": "string",
						"nullable": true
					},
					"enrolledUniversity": {
						"type": "string",
						"nullable": true
					},
					"enrolledSubject": {
						"type": "string",
						"nullable": true
					},
					"enrolledOtherSubject": {
						"type": "string",
						"nullable": true
					},
					"studyStart": {
						"type": "string",
						"nullable": true
					},
					"studySemester": {
						"type": "string",
						"nullable": true
					},
					"studyFirstMajor": {
						"type": "string",
						"nullable": true
					},
					"studySecondMajor": {
						"type": "string",
						"nullable": true
					},
					"studyThirdMajor": {
						"type": "string",
						"nullable": true
					},
					"bachelorSubject": {
						"type": "string",
						"nullable": true
					},
					"bachelorUniversity": {
						"type": "string",
						"nullable": true
					},
					"apprenticeshipJob": {
						"type": "string",
						"nullable": true
					},
					"apprenticeshipCompany": {
						"type": "string",
						"nullable": true
					},
					"apprenticeshipLocation": {
						"type": "string",
						"nullable": true
					},
					"apprenticeshipStart": {
						"type": "string",
						"nullable": true
					},
					"apprenticeshipEnd": {
						"type": "string",
						"nullable": true
					},
					"occupation": {
						"type": "string",
						"nullable": true
					},
					"occupationCompany": {
						"type": "string",
						"nullable": true
					},
					"occupationLocation": {
						"type": "string",
						"nullable": true
					},
					"occupationStart": {
						"type": "string",
						"nullable": true
					},
					"occupationEnd": {
						"type": "string",
						"nullable": true
					},
					"itSkills": {
						"type": "string",
						"nullable": true
					},
					"hobbies": {
						"type": "string",
						"nullable": true
					},
					"timeInvestment": {
						"type": "string",
						"nullable": true
					},
					"motivation": {
						"type": "string",
						"nullable": true
					},
					"selfAssessment1": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"selfAssessment2": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"selfAssessment3": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"selfAssessment4": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"selfAssessment5": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"selfAssessment6": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"selfAssessment7": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"selfAssessment8": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"flyer": {
						"type": "boolean",
						"nullable": true
					},
					"posters": {
						"type": "boolean",
						"nullable": true
					},
					"lectures": {
						"type": "boolean",
						"nullable": true
					},
					"friends": {
						"type": "boolean",
						"nullable": true
					},
					"internet": {
						"type": "boolean",
						"nullable": true
					},
					"others": {
						"type": "boolean",
						"nullable": true
					},
					"othersText": {
						"type": "string",
						"nullable": true
					},
					"workingWeekend": {
						"type": "boolean",
						"nullable": true
					},
					"availabilityWorkingWeekend": {
						"type": "string",
						"enum": [
							"kannImmer",
							"nichtFR",
							"nichtSA",
							"nichtSO"
						],
						"nullable": true
					},
					"socialMedia": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"campusRally": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"partner": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"newsletter": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"admittedMember": {
						"$ref": "#/components/schemas/Member"
					},
					"generationEntity": {
						"$ref": "#/components/schemas/Generation"
					},
					"traineeApplicantVoluntarySchools": {
						"items": {
							"$ref": "#/components/schemas/TraineeApplicantVoluntarySchool"
						},
						"type": "array"
					},
					"traineeApplicantVoluntaryStudies": {
						"items": {
							"$ref": "#/components/schemas/TraineeApplicantVoluntaryStudy"
						},
						"type": "array"
					},
					"traineeApplicantHiwis": {
						"items": {
							"$ref": "#/components/schemas/TraineeApplicantHiwi"
						},
						"type": "array"
					},
					"traineeApplicantInternships": {
						"items": {
							"$ref": "#/components/schemas/TraineeApplicantInternship"
						},
						"type": "array"
					},
					"traineeApplicantLanguages": {
						"items": {
							"$ref": "#/components/schemas/TraineeApplicantLanguage"
						},
						"type": "array"
					}
				},
				"required": [
					"traineeApplicantId",
					"generation",
					"applicationDate",
					"invited",
					"toBeAdmitted",
					"admitted",
					"firstName",
					"lastName",
					"gender",
					"picture",
					"birthDate",
					"mobilePhone",
					"landlinePhone",
					"email",
					"homeAddressStreet",
					"homeAddressNumber",
					"homeAddressPostalCode",
					"homeAddressCity",
					"studyAddressStreet",
					"studyAddressNumber",
					"studyAddressPostalCode",
					"studyAddressCity",
					"enrolledDegree",
					"enrolledUniversity",
					"enrolledSubject",
					"enrolledOtherSubject",
					"studyStart",
					"studySemester",
					"studyFirstMajor",
					"studySecondMajor",
					"studyThirdMajor",
					"bachelorSubject",
					"bachelorUniversity",
					"apprenticeshipJob",
					"apprenticeshipCompany",
					"apprenticeshipLocation",
					"apprenticeshipStart",
					"apprenticeshipEnd",
					"occupation",
					"occupationCompany",
					"occupationLocation",
					"occupationStart",
					"occupationEnd",
					"itSkills",
					"hobbies",
					"timeInvestment",
					"motivation",
					"selfAssessment1",
					"selfAssessment2",
					"selfAssessment3",
					"selfAssessment4",
					"selfAssessment5",
					"selfAssessment6",
					"selfAssessment7",
					"selfAssessment8",
					"flyer",
					"posters",
					"lectures",
					"friends",
					"internet",
					"others",
					"othersText",
					"workingWeekend",
					"availabilityWorkingWeekend",
					"socialMedia",
					"campusRally",
					"partner",
					"newsletter",
					"admittedMember",
					"generationEntity",
					"traineeApplicantVoluntarySchools",
					"traineeApplicantVoluntaryStudies",
					"traineeApplicantHiwis",
					"traineeApplicantInternships",
					"traineeApplicantLanguages"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TraineeApplicantVoluntarySchool": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"traineeApplicantId": {
						"type": "number",
						"format": "double"
					},
					"activity": {
						"type": "string",
						"nullable": true
					},
					"traineeApplicant": {
						"$ref": "#/components/schemas/TraineeApplicant"
					}
				},
				"required": [
					"id",
					"traineeApplicantId",
					"activity",
					"traineeApplicant"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TraineeApplicantVoluntaryStudy": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"traineeApplicantId": {
						"type": "number",
						"format": "double"
					},
					"activity": {
						"type": "string",
						"nullable": true
					},
					"traineeApplicant": {
						"$ref": "#/components/schemas/TraineeApplicant"
					}
				},
				"required": [
					"id",
					"traineeApplicantId",
					"activity",
					"traineeApplicant"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TraineeApplicantHiwi": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"traineeApplicantId": {
						"type": "number",
						"format": "double"
					},
					"activity": {
						"type": "string",
						"nullable": true
					},
					"company": {
						"type": "string",
						"nullable": true
					},
					"location": {
						"type": "string",
						"nullable": true
					},
					"start": {
						"type": "string",
						"nullable": true
					},
					"end": {
						"type": "string",
						"nullable": true
					},
					"traineeApplicant": {
						"$ref": "#/components/schemas/TraineeApplicant"
					}
				},
				"required": [
					"id",
					"traineeApplicantId",
					"activity",
					"company",
					"location",
					"start",
					"end",
					"traineeApplicant"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TraineeApplicantInternship": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"traineeApplicantId": {
						"type": "number",
						"format": "double"
					},
					"activity": {
						"type": "string",
						"nullable": true
					},
					"company": {
						"type": "string",
						"nullable": true
					},
					"location": {
						"type": "string",
						"nullable": true
					},
					"start": {
						"type": "string",
						"nullable": true
					},
					"end": {
						"type": "string",
						"nullable": true
					},
					"traineeApplicant": {
						"$ref": "#/components/schemas/TraineeApplicant"
					}
				},
				"required": [
					"id",
					"traineeApplicantId",
					"activity",
					"company",
					"location",
					"start",
					"end",
					"traineeApplicant"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TraineeApplicantLanguage": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"traineeApplicantId": {
						"type": "number",
						"format": "double"
					},
					"language": {
						"type": "string",
						"nullable": true
					},
					"languageLevel": {
						"type": "string",
						"nullable": true
					},
					"traineeApplicant": {
						"$ref": "#/components/schemas/TraineeApplicant"
					}
				},
				"required": [
					"id",
					"traineeApplicantId",
					"language",
					"languageLevel",
					"traineeApplicant"
				],
				"type": "object",
				"additionalProperties": false
			},
			"InternalProject": {
				"properties": {
					"internalProjectId": {
						"type": "number",
						"format": "double"
					},
					"generationId": {
						"type": "number",
						"format": "double"
					},
					"projectName": {
						"type": "string"
					},
					"abbreviation": {
						"type": "string"
					},
					"kickoff": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"offerAtEv": {
						"type": "boolean"
					},
					"zpAtEv": {
						"type": "boolean"
					},
					"zpHeld": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"apAtEv": {
						"type": "boolean"
					},
					"apHeld": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"dlAtEv": {
						"type": "boolean"
					},
					"qualityManagers": {
						"items": {
							"$ref": "#/components/schemas/Member"
						},
						"type": "array"
					},
					"members": {
						"items": {
							"$ref": "#/components/schemas/Member"
						},
						"type": "array"
					},
					"generation": {
						"$ref": "#/components/schemas/Generation"
					}
				},
				"required": [
					"internalProjectId",
					"generationId",
					"projectName",
					"abbreviation",
					"kickoff",
					"offerAtEv",
					"zpAtEv",
					"zpHeld",
					"apAtEv",
					"apHeld",
					"dlAtEv",
					"qualityManagers",
					"members",
					"generation"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MemberStatus": {
				"properties": {
					"memberStatusId": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"members": {
						"items": {
							"$ref": "#/components/schemas/Member"
						},
						"type": "array"
					},
					"memberHasStatuses": {
						"items": {
							"$ref": "#/components/schemas/MemberHasStatus"
						},
						"type": "array"
					}
				},
				"required": [
					"memberStatusId",
					"name",
					"members",
					"memberHasStatuses"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Department": {
				"properties": {
					"departmentId": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"shortName": {
						"type": "string"
					},
					"jbtEmail": {
						"type": "string"
					},
					"linkObjectivePresentation": {
						"type": "string",
						"nullable": true
					},
					"linkOrganigram": {
						"type": "string",
						"nullable": true
					},
					"shortPresentation": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"director": {
						"$ref": "#/components/schemas/Director"
					},
					"members": {
						"items": {
							"$ref": "#/components/schemas/Member"
						},
						"type": "array"
					}
				},
				"required": [
					"departmentId",
					"name",
					"shortName",
					"jbtEmail",
					"linkObjectivePresentation",
					"linkOrganigram",
					"shortPresentation",
					"content",
					"director",
					"members"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DirectorHasPermission": {
				"properties": {
					"directorId": {
						"type": "number",
						"format": "double"
					},
					"permissionId": {
						"type": "number",
						"format": "double"
					},
					"canDelegate": {
						"type": "boolean"
					},
					"permission": {
						"$ref": "#/components/schemas/Permission"
					},
					"director": {
						"$ref": "#/components/schemas/Director"
					}
				},
				"required": [
					"directorId",
					"permissionId",
					"canDelegate",
					"permission",
					"director"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Permission": {
				"properties": {
					"permissionId": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"directorHasPermissions": {
						"items": {
							"$ref": "#/components/schemas/DirectorHasPermission"
						},
						"type": "array"
					},
					"members": {
						"items": {
							"$ref": "#/components/schemas/Member"
						},
						"type": "array"
					}
				},
				"required": [
					"permissionId",
					"name",
					"description",
					"directorHasPermissions",
					"members"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Director": {
				"properties": {
					"directorId": {
						"type": "number",
						"format": "double"
					},
					"designationMale": {
						"type": "string"
					},
					"designationFemale": {
						"type": "string"
					},
					"departmentId": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"shortName": {
						"type": "string"
					},
					"jbtEmail": {
						"type": "string"
					},
					"shortIntroduction": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"sequence": {
						"type": "number",
						"format": "double"
					},
					"department": {
						"$ref": "#/components/schemas/Department"
					},
					"directorHasPermissions": {
						"items": {
							"$ref": "#/components/schemas/DirectorHasPermission"
						},
						"type": "array"
					},
					"memberHasDirectorPositions": {
						"items": {
							"$ref": "#/components/schemas/MemberHasDirectorPosition"
						},
						"type": "array"
					},
					"projects": {
						"items": {
							"$ref": "#/components/schemas/Project"
						},
						"type": "array"
					}
				},
				"required": [
					"directorId",
					"designationMale",
					"designationFemale",
					"departmentId",
					"shortName",
					"jbtEmail",
					"shortIntroduction",
					"content",
					"sequence",
					"department",
					"directorHasPermissions",
					"memberHasDirectorPositions",
					"projects"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MemberHasDirectorPosition": {
				"properties": {
					"memberId": {
						"type": "number",
						"format": "double"
					},
					"directorId": {
						"type": "number",
						"format": "double"
					},
					"from": {
						"type": "string",
						"format": "date-time"
					},
					"until": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"director": {
						"$ref": "#/components/schemas/Director"
					},
					"member": {
						"$ref": "#/components/schemas/Member"
					}
				},
				"required": [
					"memberId",
					"directorId",
					"from",
					"until",
					"director",
					"member"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Project": {
				"properties": {
					"projectId": {
						"type": "number",
						"format": "double"
					},
					"status": {
						"type": "string",
						"enum": [
							"Bewerbung",
							"Angebot",
							"Durchführung",
							"Abrechnung",
							"Abgeschlossen",
							"NichtBesetzt",
							"PitchVerloren",
							"AngebotAbgelehnt",
							"Abgebrochen"
						],
						"nullable": true
					},
					"projectName": {
						"type": "string"
					},
					"applicationsKey": {
						"type": "string"
					},
					"clientId": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"clientConfidential": {
						"type": "boolean"
					},
					"sectorOld": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"companyOld": {
						"type": "string",
						"nullable": true
					},
					"note": {
						"type": "string",
						"nullable": true
					},
					"kickoff": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"projectEnd": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"applicationStart1": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"applicationEnd1": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"applicationStart2": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"applicationEnd2": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"signatureDate": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"invoicing": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"invoiceNumber": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"accountingSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"soldBT": {
						"type": "string",
						"nullable": true
					},
					"performedBT": {
						"type": "string",
						"nullable": true
					},
					"soldExpenses": {
						"type": "string",
						"nullable": true
					},
					"euroPerBT": {
						"type": "string",
						"nullable": true
					},
					"APatEV": {
						"type": "boolean",
						"nullable": true
					},
					"evaluationAtEV": {
						"type": "boolean",
						"nullable": true
					},
					"DLatEV": {
						"type": "boolean",
						"nullable": true
					},
					"moneyReceived": {
						"type": "boolean",
						"nullable": true
					},
					"paymentDelay": {
						"type": "boolean",
						"nullable": true
					},
					"consultingContractProvided": {
						"type": "boolean",
						"nullable": true
					},
					"teamContractProvided": {
						"type": "boolean",
						"nullable": true
					},
					"offerInAlfresco": {
						"type": "boolean",
						"nullable": true
					},
					"deviationFromStandard": {
						"type": "boolean",
						"nullable": true
					},
					"qmApproval": {
						"type": "boolean",
						"nullable": true
					},
					"jobSite": {
						"type": "string",
						"nullable": true
					},
					"tenderDate": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"estimatedProjectStart": {
						"type": "string",
						"nullable": true
					},
					"estimatedProjectDuration": {
						"type": "string",
						"nullable": true
					},
					"estimatedProjectBTmin": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"estimatedProjectBTmax": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"estimatedProjectEuroPerBT": {
						"type": "string",
						"nullable": true
					},
					"estimatedProjectEuroPerBTrange": {
						"type": "string",
						"nullable": true
					},
					"estimatedProjectMemberMin": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"estimatedProjectMemberMax": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"staffingCommittee": {
						"type": "string",
						"nullable": true
					},
					"customerType": {
						"type": "string",
						"enum": [
							"Altkunde",
							"Neukunde"
						],
						"nullable": true
					},
					"customerLocationOld": {
						"type": "string",
						"nullable": true
					},
					"customerAddress1Old": {
						"type": "string",
						"nullable": true
					},
					"customerAddress2Old": {
						"type": "string",
						"nullable": true
					},
					"customerAddress3Old": {
						"type": "string",
						"nullable": true
					},
					"acquisitorId": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"acquisitionMethod": {
						"type": "string",
						"enum": [
							"Kunde",
							"Alumni",
							"Kurator",
							"Partner",
							"PA",
							"JBTler"
						],
						"nullable": true
					},
					"clientInformationOld": {
						"type": "string",
						"nullable": true
					},
					"situation": {
						"type": "string",
						"nullable": true
					},
					"peculiarities": {
						"type": "string",
						"nullable": true
					},
					"coreCompetency": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"requirementProfile": {
						"type": "string",
						"nullable": true
					},
					"referenceProjects": {
						"type": "string",
						"nullable": true
					},
					"netSalesPriceVariable": {
						"type": "string",
						"nullable": true
					},
					"ownCloud": {
						"type": "string",
						"nullable": true
					},
					"memberHasProjects": {
						"items": {
							"$ref": "#/components/schemas/MemberHasProject"
						},
						"type": "array"
					},
					"acquisitor": {
						"$ref": "#/components/schemas/Director"
					},
					"client": {
						"$ref": "#/components/schemas/Company"
					},
					"industry": {
						"$ref": "#/components/schemas/Industry"
					},
					"contactPersons": {
						"items": {
							"$ref": "#/components/schemas/ContactPerson"
						},
						"type": "array"
					},
					"coreCompetencies": {
						"items": {
							"$ref": "#/components/schemas/CoreCompetency"
						},
						"type": "array"
					}
				},
				"required": [
					"projectId",
					"status",
					"projectName",
					"applicationsKey",
					"clientId",
					"clientConfidential",
					"sectorOld",
					"companyOld",
					"note",
					"kickoff",
					"projectEnd",
					"applicationStart1",
					"applicationEnd1",
					"applicationStart2",
					"applicationEnd2",
					"signatureDate",
					"invoicing",
					"invoiceNumber",
					"accountingSince",
					"soldBT",
					"performedBT",
					"soldExpenses",
					"euroPerBT",
					"APatEV",
					"evaluationAtEV",
					"DLatEV",
					"moneyReceived",
					"paymentDelay",
					"consultingContractProvided",
					"teamContractProvided",
					"offerInAlfresco",
					"deviationFromStandard",
					"qmApproval",
					"jobSite",
					"tenderDate",
					"estimatedProjectStart",
					"estimatedProjectDuration",
					"estimatedProjectBTmin",
					"estimatedProjectBTmax",
					"estimatedProjectEuroPerBT",
					"estimatedProjectEuroPerBTrange",
					"estimatedProjectMemberMin",
					"estimatedProjectMemberMax",
					"staffingCommittee",
					"customerType",
					"customerLocationOld",
					"customerAddress1Old",
					"customerAddress2Old",
					"customerAddress3Old",
					"acquisitorId",
					"acquisitionMethod",
					"clientInformationOld",
					"situation",
					"peculiarities",
					"coreCompetency",
					"requirementProfile",
					"referenceProjects",
					"netSalesPriceVariable",
					"ownCloud",
					"memberHasProjects",
					"acquisitor",
					"client",
					"industry",
					"contactPersons",
					"coreCompetencies"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MemberHasProject": {
				"properties": {
					"projectId": {
						"type": "number",
						"format": "double"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					},
					"btAllocation": {
						"type": "string",
						"nullable": true
					},
					"expensesAllocation": {
						"type": "string",
						"nullable": true
					},
					"type": {
						"type": "string",
						"enum": [
							"Bewerbung",
							"Mitglied",
							"PL",
							"QM"
						],
						"nullable": true
					},
					"date": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"applicationDate": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"freelancerContract": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"moneyTransferred": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"semester": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"internship": {
						"type": "string",
						"nullable": true
					},
					"apprenticeship": {
						"type": "string",
						"nullable": true
					},
					"studentJob": {
						"type": "string",
						"nullable": true
					},
					"seminarPapers": {
						"type": "string",
						"nullable": true
					},
					"workshops": {
						"type": "string",
						"nullable": true
					},
					"internalCommitment": {
						"items": {
							"type": "string",
							"enum": [
								"Vorstandstätigkeit",
								"Teamleiter"
							]
						},
						"type": "array",
						"nullable": true
					},
					"preliminaryWork": {
						"items": {
							"type": "string",
							"enum": [
								"Herstellung des Erstkontakts",
								"Schreiben des Angebots"
							]
						},
						"type": "array",
						"nullable": true
					},
					"extraordinaryCommitment": {
						"type": "string",
						"nullable": true
					},
					"availability": {
						"type": "string",
						"enum": [
							"Ohne Einschränkung",
							"Mit Einschränkung"
						],
						"nullable": true
					},
					"restriction": {
						"type": "string",
						"nullable": true
					},
					"motivation": {
						"type": "string",
						"nullable": true
					},
					"member": {
						"$ref": "#/components/schemas/Member"
					},
					"project": {
						"$ref": "#/components/schemas/Project"
					}
				},
				"required": [
					"projectId",
					"memberId",
					"btAllocation",
					"expensesAllocation",
					"type",
					"date",
					"applicationDate",
					"freelancerContract",
					"moneyTransferred",
					"semester",
					"internship",
					"apprenticeship",
					"studentJob",
					"seminarPapers",
					"workshops",
					"internalCommitment",
					"preliminaryWork",
					"extraordinaryCommitment",
					"availability",
					"restriction",
					"motivation",
					"member",
					"project"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Company": {
				"properties": {
					"companyId": {
						"type": "number",
						"format": "double"
					},
					"prospect": {
						"type": "boolean"
					},
					"name": {
						"type": "string"
					},
					"industryId": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"shortDescription": {
						"type": "string",
						"nullable": true
					},
					"addressAdditional": {
						"type": "string",
						"nullable": true
					},
					"street": {
						"type": "string",
						"nullable": true
					},
					"postalCode": {
						"type": "string",
						"nullable": true
					},
					"city": {
						"type": "string",
						"nullable": true
					},
					"url": {
						"type": "string",
						"nullable": true
					},
					"importantInformation": {
						"type": "string",
						"nullable": true
					},
					"revenueStrength": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"projectNumber": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"btAmount": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"satisfaction": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"contactDesired": {
						"type": "boolean"
					},
					"contactChannel": {
						"type": "string",
						"nullable": true
					},
					"classified": {
						"type": "boolean"
					},
					"contactPersons": {
						"items": {
							"$ref": "#/components/schemas/ContactPerson"
						},
						"type": "array"
					},
					"projects": {
						"items": {
							"$ref": "#/components/schemas/Project"
						},
						"type": "array"
					},
					"industry": {
						"$ref": "#/components/schemas/Industry"
					}
				},
				"required": [
					"companyId",
					"prospect",
					"name",
					"industryId",
					"shortDescription",
					"addressAdditional",
					"street",
					"postalCode",
					"city",
					"url",
					"importantInformation",
					"revenueStrength",
					"projectNumber",
					"btAmount",
					"satisfaction",
					"contactDesired",
					"contactChannel",
					"classified",
					"contactPersons",
					"projects",
					"industry"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ContactPerson": {
				"properties": {
					"contactPersonId": {
						"type": "number",
						"format": "double"
					},
					"companyId": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"company": {
						"$ref": "#/components/schemas/Company"
					},
					"projects": {
						"items": {
							"$ref": "#/components/schemas/Project"
						},
						"type": "array"
					}
				},
				"required": [
					"contactPersonId",
					"companyId",
					"name",
					"company",
					"projects"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Industry": {
				"properties": {
					"industryId": {
						"type": "number",
						"format": "double"
					},
					"description": {
						"type": "string"
					},
					"projects": {
						"items": {
							"$ref": "#/components/schemas/Project"
						},
						"type": "array"
					},
					"company": {
						"items": {
							"$ref": "#/components/schemas/Company"
						},
						"type": "array"
					}
				},
				"required": [
					"industryId",
					"description",
					"projects",
					"company"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CoreCompetency": {
				"properties": {
					"coreCompetencyId": {
						"type": "number",
						"format": "double"
					},
					"designation": {
						"type": "string"
					},
					"projects": {
						"items": {
							"$ref": "#/components/schemas/Project"
						},
						"type": "array"
					}
				},
				"required": [
					"coreCompetencyId",
					"designation",
					"projects"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MemberHasOtherPosition": {
				"properties": {
					"memberId": {
						"type": "number",
						"format": "double"
					},
					"otherPositionId": {
						"type": "number",
						"format": "double"
					},
					"from": {
						"type": "string"
					},
					"until": {
						"type": "string",
						"nullable": true
					},
					"otherPosition": {
						"$ref": "#/components/schemas/OtherPosition"
					},
					"member": {
						"$ref": "#/components/schemas/Member"
					}
				},
				"required": [
					"memberId",
					"otherPositionId",
					"from",
					"until",
					"otherPosition",
					"member"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OtherPosition": {
				"properties": {
					"otherPositionId": {
						"type": "number",
						"format": "double"
					},
					"descriptionMale": {
						"type": "string"
					},
					"descriptionFemale": {
						"type": "string"
					},
					"briefIntroduction": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"memberHasOtherPositions": {
						"items": {
							"$ref": "#/components/schemas/MemberHasOtherPosition"
						},
						"type": "array"
					}
				},
				"required": [
					"otherPositionId",
					"descriptionMale",
					"descriptionFemale",
					"briefIntroduction",
					"content",
					"memberHasOtherPositions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MemberHasEvent": {
				"properties": {
					"eventId": {
						"type": "number",
						"format": "double"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					},
					"role": {
						"type": "string",
						"enum": [
							"Teilnehmer",
							"Organisator"
						]
					},
					"registrationTime": {
						"type": "string",
						"format": "date-time"
					},
					"event": {
						"$ref": "#/components/schemas/Event"
					},
					"member": {
						"$ref": "#/components/schemas/Member"
					}
				},
				"required": [
					"eventId",
					"memberId",
					"role",
					"registrationTime",
					"event",
					"member"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Event": {
				"properties": {
					"eventId": {
						"type": "number",
						"format": "double"
					},
					"eventName": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"date": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"end": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"registrationFrom": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"registrationTo": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"location": {
						"type": "string",
						"nullable": true
					},
					"startTime": {
						"type": "string",
						"nullable": true
					},
					"endTime": {
						"type": "string",
						"nullable": true
					},
					"ww": {
						"type": "boolean"
					},
					"network": {
						"type": "boolean"
					},
					"maximumParticipants": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"jbtGoes": {
						"type": "boolean"
					},
					"others": {
						"type": "boolean"
					},
					"memberHasEvents": {
						"items": {
							"$ref": "#/components/schemas/MemberHasEvent"
						},
						"type": "array"
					},
					"memberHasEventWws": {
						"items": {
							"$ref": "#/components/schemas/MemberHasEventWw"
						},
						"type": "array"
					}
				},
				"required": [
					"eventId",
					"eventName",
					"description",
					"date",
					"end",
					"registrationFrom",
					"registrationTo",
					"location",
					"startTime",
					"endTime",
					"ww",
					"network",
					"maximumParticipants",
					"jbtGoes",
					"others",
					"memberHasEvents",
					"memberHasEventWws"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MemberHasEventWw": {
				"properties": {
					"eventId": {
						"type": "number",
						"format": "double"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					},
					"arrival": {
						"type": "string",
						"enum": [
							"FrF",
							"FrM",
							"FrA",
							"SaF",
							"SaM",
							"SaA",
							"SaS"
						],
						"nullable": true
					},
					"departure": {
						"type": "string",
						"enum": [
							"FrM",
							"FrA",
							"SaF",
							"SaM",
							"SaA",
							"So"
						],
						"nullable": true
					},
					"car": {
						"type": "boolean",
						"nullable": true
					},
					"seats": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"vegetarian": {
						"type": "boolean",
						"nullable": true
					},
					"comment": {
						"type": "string",
						"nullable": true
					},
					"event": {
						"$ref": "#/components/schemas/Event"
					},
					"member": {
						"$ref": "#/components/schemas/Member"
					}
				},
				"required": [
					"eventId",
					"memberId",
					"arrival",
					"departure",
					"car",
					"seats",
					"vegetarian",
					"comment",
					"event",
					"member"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MemberHasExpertise": {
				"properties": {
					"memberId": {
						"type": "number",
						"format": "double"
					},
					"expertiseId": {
						"type": "number",
						"format": "double"
					},
					"value": {
						"type": "string"
					},
					"expertise": {
						"$ref": "#/components/schemas/Expertise"
					},
					"member": {
						"$ref": "#/components/schemas/Member"
					}
				},
				"required": [
					"memberId",
					"expertiseId",
					"value",
					"expertise",
					"member"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Expertise": {
				"properties": {
					"expertiseId": {
						"type": "number",
						"format": "double"
					},
					"designation": {
						"type": "string",
						"nullable": true
					},
					"memberHasExpertise": {
						"items": {
							"$ref": "#/components/schemas/MemberHasExpertise"
						},
						"type": "array"
					}
				},
				"required": [
					"expertiseId",
					"designation",
					"memberHasExpertise"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MemberHasWorkshopInstance": {
				"properties": {
					"workshopInstanceId": {
						"type": "number",
						"format": "double"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "string",
						"enum": [
							"Anmeldung",
							"Teilnehmer",
							"Referent"
						]
					},
					"date": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"present": {
						"type": "boolean",
						"nullable": true
					},
					"feedbackGiven": {
						"type": "boolean"
					},
					"member": {
						"$ref": "#/components/schemas/Member"
					},
					"workshopInstance": {
						"$ref": "#/components/schemas/WorkshopInstance"
					}
				},
				"required": [
					"workshopInstanceId",
					"memberId",
					"type",
					"date",
					"present",
					"feedbackGiven",
					"member",
					"workshopInstance"
				],
				"type": "object",
				"additionalProperties": false
			},
			"WorkshopInstance": {
				"properties": {
					"workshopInstanceId": {
						"type": "number",
						"format": "double"
					},
					"workshopId": {
						"type": "number",
						"format": "double"
					},
					"status": {
						"type": "string",
						"enum": [
							"Anmeldung",
							"Anmeldung abgeschlossen",
							"Feedback",
							"Abgeschlossen"
						],
						"nullable": true
					},
					"date": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"startTime": {
						"type": "string",
						"nullable": true
					},
					"endTime": {
						"type": "string",
						"nullable": true
					},
					"location": {
						"type": "string",
						"nullable": true
					},
					"maximumParticipants": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"speakers": {
						"type": "string",
						"nullable": true
					},
					"targetGroup": {
						"type": "string",
						"nullable": true
					},
					"registrationFrom": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"registrationUntil": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"memberHasWorkshopInstances": {
						"items": {
							"$ref": "#/components/schemas/MemberHasWorkshopInstance"
						},
						"type": "array"
					},
					"workshopFeedbacks": {
						"items": {
							"$ref": "#/components/schemas/WorkshopFeedback"
						},
						"type": "array"
					},
					"workshop": {
						"$ref": "#/components/schemas/Workshop"
					}
				},
				"required": [
					"workshopInstanceId",
					"workshopId",
					"status",
					"date",
					"startTime",
					"endTime",
					"location",
					"maximumParticipants",
					"speakers",
					"targetGroup",
					"registrationFrom",
					"registrationUntil",
					"memberHasWorkshopInstances",
					"workshopFeedbacks",
					"workshop"
				],
				"type": "object",
				"additionalProperties": false
			},
			"WorkshopFeedbackHasFeedbackQuestion": {
				"properties": {
					"workshopFeedbackId": {
						"type": "number",
						"format": "double"
					},
					"feedbackQuestionId": {
						"type": "number",
						"format": "double"
					},
					"grade": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"feedbackQuestion": {
						"$ref": "#/components/schemas/FeedbackQuestion"
					},
					"workshopFeedback": {
						"$ref": "#/components/schemas/WorkshopFeedback"
					}
				},
				"required": [
					"workshopFeedbackId",
					"feedbackQuestionId",
					"grade",
					"feedbackQuestion",
					"workshopFeedback"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FeedbackQuestion": {
				"properties": {
					"feedbackQuestionId": {
						"type": "number",
						"format": "double"
					},
					"question": {
						"type": "string",
						"nullable": true
					},
					"workshopFeedbackHasFeedbackQuestions": {
						"items": {
							"$ref": "#/components/schemas/WorkshopFeedbackHasFeedbackQuestion"
						},
						"type": "array"
					}
				},
				"required": [
					"feedbackQuestionId",
					"question",
					"workshopFeedbackHasFeedbackQuestions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"WorkshopFeedback": {
				"properties": {
					"workshopFeedbackId": {
						"type": "number",
						"format": "double"
					},
					"workshopInstanceId": {
						"type": "number",
						"format": "double"
					},
					"date": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"workshopLevel": {
						"type": "string",
						"nullable": true
					},
					"contentFeedback": {
						"type": "string",
						"nullable": true
					},
					"presentationFeedback": {
						"type": "string",
						"nullable": true
					},
					"workshopNeed": {
						"type": "string",
						"nullable": true
					},
					"workshopInstance": {
						"$ref": "#/components/schemas/WorkshopInstance"
					},
					"workshopFeedbackHasFeedbackQuestions": {
						"items": {
							"$ref": "#/components/schemas/WorkshopFeedbackHasFeedbackQuestion"
						},
						"type": "array"
					},
					"workshopFeedbackHasMembers": {
						"items": {
							"$ref": "#/components/schemas/WorkshopFeedbackHasMember"
						},
						"type": "array"
					}
				},
				"required": [
					"workshopFeedbackId",
					"workshopInstanceId",
					"date",
					"workshopLevel",
					"contentFeedback",
					"presentationFeedback",
					"workshopNeed",
					"workshopInstance",
					"workshopFeedbackHasFeedbackQuestions",
					"workshopFeedbackHasMembers"
				],
				"type": "object",
				"additionalProperties": false
			},
			"WorkshopFeedbackHasMember": {
				"properties": {
					"workshopFeedbackId": {
						"type": "number",
						"format": "double"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					},
					"grade": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"member": {
						"$ref": "#/components/schemas/Member"
					},
					"workshopFeedback": {
						"$ref": "#/components/schemas/WorkshopFeedback"
					}
				},
				"required": [
					"workshopFeedbackId",
					"memberId",
					"grade",
					"member",
					"workshopFeedback"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Workshop": {
				"properties": {
					"workshopId": {
						"type": "number",
						"format": "double"
					},
					"workshopName": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"Pflichtworkshop",
							"Workshop",
							"Externer Workshop"
						],
						"nullable": true
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"workshopInstances": {
						"items": {
							"$ref": "#/components/schemas/WorkshopInstance"
						},
						"type": "array"
					}
				},
				"required": [
					"workshopId",
					"workshopName",
					"type",
					"description",
					"workshopInstances"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MemberHasStatus": {
				"properties": {
					"memberId": {
						"type": "number",
						"format": "double"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"memberStatusId": {
						"type": "number",
						"format": "double"
					},
					"note": {
						"type": "string",
						"nullable": true
					},
					"memberStatus": {
						"$ref": "#/components/schemas/MemberStatus"
					},
					"member": {
						"$ref": "#/components/schemas/Member"
					}
				},
				"required": [
					"memberId",
					"date",
					"memberStatusId",
					"note",
					"memberStatus",
					"member"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Mmtracking": {
				"properties": {
					"mmtrackingId": {
						"type": "number",
						"format": "double"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"members": {
						"items": {
							"$ref": "#/components/schemas/Member"
						},
						"type": "array"
					}
				},
				"required": [
					"mmtrackingId",
					"date",
					"members"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PasswordReset": {
				"properties": {
					"memberJbtEmail": {
						"type": "string"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"salt": {
						"type": "string",
						"format": "byte"
					},
					"token": {
						"type": "string"
					},
					"member": {
						"$ref": "#/components/schemas/Member"
					}
				},
				"required": [
					"memberJbtEmail",
					"date",
					"salt",
					"token",
					"member"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Internship": {
				"properties": {
					"memberId": {
						"type": "number",
						"format": "double"
					},
					"company": {
						"type": "string",
						"nullable": true
					},
					"description": {
						"type": "string"
					},
					"member": {
						"$ref": "#/components/schemas/Member"
					}
				},
				"required": [
					"memberId",
					"company",
					"description",
					"member"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Language": {
				"properties": {
					"memberId": {
						"type": "number",
						"format": "double"
					},
					"value": {
						"type": "string"
					},
					"level": {
						"type": "number",
						"format": "double"
					},
					"member": {
						"$ref": "#/components/schemas/Member"
					}
				},
				"required": [
					"memberId",
					"value",
					"level",
					"member"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DepartmentPartialDto": {
				"properties": {
					"shortName": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"departmentId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"shortName",
					"name",
					"departmentId"
				],
				"type": "object",
				"description": "Type of the partial department dto used for the member list"
			},
			"MemberPartialDto": {
				"properties": {
					"lastChange": {
						"type": "string",
						"format": "date-time"
					},
					"department": {
						"$ref": "#/components/schemas/DepartmentPartialDto"
					},
					"memberStatus": {
						"$ref": "#/components/schemas/MemberStatus"
					},
					"jbtEmail": {
						"type": "string"
					},
					"mobile": {
						"type": "string"
					},
					"internalProjectId": {
						"type": "number",
						"format": "double"
					},
					"generationId": {
						"type": "number",
						"format": "double"
					},
					"lastname": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"lastChange",
					"department",
					"memberStatus",
					"jbtEmail",
					"mobile",
					"internalProjectId",
					"generationId",
					"lastname",
					"firstname",
					"memberId"
				],
				"type": "object",
				"description": "Type of the partial member dto used for the member list"
			},
			"MemberImage": {
				"properties": {
					"mimeType": {
						"type": "string"
					},
					"base64": {
						"type": "string"
					}
				},
				"required": [
					"mimeType",
					"base64"
				],
				"type": "object",
				"description": "Type of the member image"
			},
			"DepartmentMemberDto": {
				"properties": {
					"department": {
						"$ref": "#/components/schemas/DepartmentPartialDto"
					},
					"lastname": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"department",
					"lastname",
					"firstname",
					"memberId"
				],
				"type": "object",
				"description": "Type of a member of a department (partial member with department information)"
			},
			"DirectorDto": {
				"properties": {
					"designationMale": {
						"type": "string"
					},
					"designationFemale": {
						"type": "string"
					},
					"gender": {
						"type": "boolean"
					},
					"until": {
						"type": "string",
						"format": "date-time"
					},
					"from": {
						"type": "string",
						"format": "date-time"
					},
					"department": {
						"$ref": "#/components/schemas/DepartmentPartialDto"
					},
					"directorId": {
						"type": "number",
						"format": "double"
					},
					"lastname": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"designationMale",
					"designationFemale",
					"gender",
					"until",
					"from",
					"department",
					"directorId",
					"lastname",
					"firstname",
					"memberId"
				],
				"type": "object",
				"description": "Type of the director (partial member with department and role information)"
			},
			"StatusOverview": {
				"properties": {
					"wikiErrorMsg": {
						"type": "string"
					},
					"wikiSuccesful": {
						"type": "boolean"
					},
					"nextcloudErrorMsg": {
						"type": "string"
					},
					"nextcloudSuccesful": {
						"type": "boolean"
					},
					"mailListErrorMsg": {
						"type": "string"
					},
					"mailListSuccesful": {
						"type": "boolean"
					},
					"mailErrorMsg": {
						"type": "string"
					},
					"mailSuccesful": {
						"type": "boolean"
					},
					"queryErrorMsg": {
						"type": "string"
					},
					"querySuccesful": {
						"type": "boolean"
					}
				},
				"required": [
					"wikiErrorMsg",
					"wikiSuccesful",
					"nextcloudErrorMsg",
					"nextcloudSuccesful",
					"mailListErrorMsg",
					"mailListSuccesful",
					"mailErrorMsg",
					"mailSuccesful",
					"queryErrorMsg",
					"querySuccesful"
				],
				"type": "object",
				"description": "Type of the overview of the status of the different account creation operations"
			},
			"CreateMemberResponseDto": {
				"properties": {
					"statusOverview": {
						"$ref": "#/components/schemas/StatusOverview"
					},
					"memberID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"statusOverview",
					"memberID"
				],
				"type": "object",
				"description": "Type of the response after creating a member"
			},
			"CreateMemberRequestDto": {
				"properties": {
					"generationId": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"gender": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"mobile": {
						"type": "string",
						"nullable": true
					},
					"birthday": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					}
				},
				"required": [
					"generationId",
					"gender",
					"mobile",
					"birthday",
					"email",
					"name",
					"lastName",
					"firstName"
				],
				"type": "object",
				"description": "Type of the request to create a member"
			},
			"DepartmentDetailsDto": {
				"properties": {
					"linkOrganigram": {
						"type": "string"
					},
					"linkObjectivePresentation": {
						"type": "string"
					},
					"jbtEmail": {
						"type": "string"
					},
					"shortName": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"departmentId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"linkOrganigram",
					"linkObjectivePresentation",
					"jbtEmail",
					"shortName",
					"name",
					"departmentId"
				],
				"type": "object",
				"description": "Type of the department"
			},
			"UpdateDepartmentDto": {
				"properties": {
					"linkOrganigram": {
						"type": "string",
						"nullable": true
					},
					"linkObjectivePresentation": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"linkOrganigram",
					"linkObjectivePresentation"
				],
				"type": "object",
				"description": "Type of the request to update a department"
			},
			"LanguageValue": {
				"properties": {
					"language": {
						"type": "string"
					}
				},
				"required": [
					"language"
				],
				"type": "object",
				"description": "Value type for languages"
			},
			"ItSkillsValue": {
				"properties": {
					"itSkill": {
						"type": "string"
					}
				},
				"required": [
					"itSkill"
				],
				"type": "object",
				"description": "Value type for it skills"
			},
			"MemberPermissionAssignmentDto": {
				"properties": {
					"lastname": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"lastname",
					"firstname",
					"memberId"
				],
				"type": "object",
				"description": "Type of the member permission asignment dto used for the permission page"
			},
			"DirectorPositionDto": {
				"properties": {
					"shortName": {
						"type": "string"
					},
					"canDelegate": {
						"type": "boolean"
					},
					"directorId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"shortName",
					"canDelegate",
					"directorId"
				],
				"type": "object",
				"description": "Type of the director position dto"
			},
			"PermissionAssignmentDto": {
				"properties": {
					"directors": {
						"items": {
							"$ref": "#/components/schemas/DirectorPositionDto"
						},
						"type": "array"
					},
					"members": {
						"items": {
							"$ref": "#/components/schemas/MemberPermissionAssignmentDto"
						},
						"type": "array"
					},
					"description": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"permissionID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"directors",
					"members",
					"description",
					"name",
					"permissionID"
				],
				"type": "object",
				"description": "Type of the permission assignment (permission of a member or a director)"
			},
			"AssignPermissionToMemberRequestDto": {
				"properties": {
					"permissionID": {
						"type": "number",
						"format": "double"
					},
					"memberID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"permissionID",
					"memberID"
				],
				"type": "object",
				"description": "Type of the request to assign a permission to a member"
			},
			"MemberStatusDto": {
				"properties": {
					"name": {
						"type": "string"
					},
					"memberStatusId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"memberStatusId"
				],
				"type": "object",
				"description": "Type of the member status dto"
			},
			"LanguageDto": {
				"properties": {
					"level": {
						"type": "number",
						"format": "double"
					},
					"value": {
						"type": "string"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"level",
					"value",
					"memberId"
				],
				"type": "object",
				"description": "Type of the language dto"
			},
			"ItSkillDto": {
				"properties": {
					"level": {
						"type": "number",
						"format": "double"
					},
					"value": {
						"type": "string"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"level",
					"value",
					"memberId"
				],
				"type": "object",
				"description": "Type of the it skill dto"
			},
			"MenteeDto": {
				"properties": {
					"lastname": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"lastname",
					"firstname",
					"memberId"
				],
				"type": "object",
				"description": "Type of the mentee (partial member)"
			},
			"MentorDto": {
				"properties": {
					"lastname": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"lastname",
					"firstname",
					"memberId"
				],
				"type": "object",
				"description": "Type of the mentor (partial member)"
			},
			"MemberDetailsDto": {
				"properties": {
					"mentor": {
						"allOf": [
							{
								"$ref": "#/components/schemas/MentorDto"
							}
						],
						"nullable": true
					},
					"mentees": {
						"items": {
							"$ref": "#/components/schemas/MenteeDto"
						},
						"type": "array"
					},
					"itSkills": {
						"items": {
							"$ref": "#/components/schemas/ItSkillDto"
						},
						"type": "array"
					},
					"languages": {
						"items": {
							"$ref": "#/components/schemas/LanguageDto"
						},
						"type": "array"
					},
					"bic": {
						"type": "string"
					},
					"iban": {
						"type": "string"
					},
					"accountHolder": {
						"type": "string"
					},
					"firstAidTraining": {
						"type": "boolean"
					},
					"drivingLicense": {
						"type": "number",
						"format": "double"
					},
					"lastChange": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"canQM": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"canPL": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"commitment": {
						"type": "string",
						"nullable": true
					},
					"apprenticeship": {
						"type": "string",
						"nullable": true
					},
					"specializations": {
						"type": "string",
						"nullable": true
					},
					"studyEnd": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"studyStart": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"courseOfStudy": {
						"type": "string"
					},
					"university": {
						"type": "string"
					},
					"email2": {
						"type": "string",
						"nullable": true
					},
					"phone2": {
						"type": "string",
						"nullable": true
					},
					"city2": {
						"type": "string",
						"nullable": true
					},
					"postalCode2": {
						"type": "string",
						"nullable": true
					},
					"street2": {
						"type": "string",
						"nullable": true
					},
					"email1": {
						"type": "string",
						"nullable": true
					},
					"phone1": {
						"type": "string",
						"nullable": true
					},
					"city1": {
						"type": "string"
					},
					"postalCode1": {
						"type": "string",
						"nullable": true
					},
					"street1": {
						"type": "string"
					},
					"employer": {
						"type": "string",
						"nullable": true
					},
					"department": {
						"allOf": [
							{
								"$ref": "#/components/schemas/DepartmentPartialDto"
							}
						],
						"nullable": true
					},
					"exitedSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"passiveSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"activeSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"seniorSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"alumnusSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"memberSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"traineeSince": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"internalProject": {
						"allOf": [
							{
								"$ref": "#/components/schemas/InternalProject"
							}
						],
						"nullable": true
					},
					"generation": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"memberStatus": {
						"$ref": "#/components/schemas/MemberStatusDto"
					},
					"jbtEmail": {
						"type": "string"
					},
					"mobile": {
						"type": "string"
					},
					"birthday": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"gender": {
						"type": "boolean"
					},
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"firstAidTraining",
					"drivingLicense",
					"canQM",
					"canPL",
					"commitment",
					"apprenticeship",
					"specializations",
					"studyEnd",
					"studyStart",
					"courseOfStudy",
					"university",
					"email2",
					"phone2",
					"city2",
					"postalCode2",
					"street2",
					"email1",
					"phone1",
					"city1",
					"postalCode1",
					"street1",
					"employer",
					"department",
					"exitedSince",
					"passiveSince",
					"activeSince",
					"seniorSince",
					"alumnusSince",
					"memberSince",
					"traineeSince",
					"internalProject",
					"generation",
					"memberStatus",
					"jbtEmail",
					"mobile",
					"birthday",
					"gender",
					"firstname",
					"lastname",
					"memberId"
				],
				"type": "object",
				"description": "Type of the member details dto used for the member details page"
			},
			"MembersFieldDto": {
				"properties": {
					"memberStatus": {
						"$ref": "#/components/schemas/MemberStatusDto"
					},
					"lastname": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"memberId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"lastname",
					"firstname",
					"memberId"
				],
				"type": "object",
				"description": "Type of the member field"
			},
			"InternalProjectDto": {
				"properties": {
					"qualityManagers": {
						"items": {
							"$ref": "#/components/schemas/MembersFieldDto"
						},
						"type": "array",
						"nullable": true
					},
					"members": {
						"items": {
							"$ref": "#/components/schemas/MembersFieldDto"
						},
						"type": "array",
						"nullable": true
					},
					"dlAtEv": {
						"type": "boolean"
					},
					"apHeld": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"apAtEv": {
						"type": "boolean"
					},
					"zpHeld": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"zpAtEv": {
						"type": "boolean"
					},
					"offerAtEv": {
						"type": "boolean"
					},
					"kickoff": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"abbreviation": {
						"type": "string"
					},
					"projectName": {
						"type": "string"
					},
					"generationName": {
						"type": "string"
					},
					"generation": {
						"type": "number",
						"format": "double"
					},
					"internalProjectId": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"qualityManagers",
					"members",
					"dlAtEv",
					"apHeld",
					"apAtEv",
					"zpHeld",
					"zpAtEv",
					"offerAtEv",
					"kickoff",
					"abbreviation",
					"projectName",
					"generationName",
					"generation",
					"internalProjectId"
				],
				"type": "object",
				"description": "Type of the internal project of a member"
			},
			"TraineeChoiceDto": {
				"properties": {
					"choice_department3": {
						"type": "number",
						"format": "double"
					},
					"choice_department2": {
						"type": "number",
						"format": "double"
					},
					"choice_department1": {
						"type": "number",
						"format": "double"
					},
					"choice_department": {
						"type": "number",
						"format": "double"
					},
					"choice_internalProject3": {
						"type": "number",
						"format": "double"
					},
					"choice_internalProject2": {
						"type": "number",
						"format": "double"
					},
					"choice_internalProject1": {
						"type": "number",
						"format": "double"
					},
					"choice_internalProject": {
						"type": "number",
						"format": "double"
					},
					"choice_mentor3": {
						"type": "number",
						"format": "double"
					},
					"choice_mentor2": {
						"type": "number",
						"format": "double"
					},
					"choice_mentor1": {
						"type": "number",
						"format": "double"
					},
					"choice_mentor": {
						"type": "number",
						"format": "double"
					},
					"lastname": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"memberID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"choice_department3",
					"choice_department2",
					"choice_department1",
					"choice_department",
					"choice_internalProject3",
					"choice_internalProject2",
					"choice_internalProject1",
					"choice_internalProject",
					"choice_mentor3",
					"choice_mentor2",
					"choice_mentor1",
					"choice_mentor",
					"lastname",
					"firstname",
					"memberID"
				],
				"type": "object",
				"description": "Type of the trainee choice of a member"
			},
			"TraineeMotivationDto": {
				"properties": {
					"internalProject3Motivation": {
						"type": "string"
					},
					"internalProject2Motivation": {
						"type": "string"
					},
					"internalProject1Motivation": {
						"type": "string"
					},
					"memberID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"internalProject3Motivation",
					"internalProject2Motivation",
					"internalProject1Motivation",
					"memberID"
				],
				"type": "object",
				"description": "Type of the motivation of a trainee"
			},
			"UpdateVotingDeadlinesRequestDto": {
				"properties": {
					"electionEnd": {
						"type": "string",
						"format": "date-time"
					},
					"electionStart": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"electionEnd",
					"electionStart"
				],
				"type": "object",
				"description": "Type of the request to update the voting deadlines of a generation"
			},
			"TraineeAssignmentDto": {
				"properties": {
					"departmentID": {
						"type": "number",
						"format": "double"
					},
					"mentorID": {
						"type": "number",
						"format": "double"
					},
					"ipID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"departmentID",
					"mentorID",
					"ipID"
				],
				"type": "object",
				"description": "Type of the assignment of a trainee to an internal project, mentor and department"
			},
			"TraineeProgressDto": {
				"properties": {
					"excelBasics": {
						"type": "boolean"
					},
					"safetyTraining": {
						"type": "boolean"
					},
					"dataPrivacyTraining": {
						"type": "boolean"
					},
					"strategyAndOrganisation": {
						"type": "boolean"
					},
					"msPowerpoint": {
						"type": "boolean"
					},
					"departmentQualityManagement": {
						"type": "boolean"
					},
					"departmentNetwork": {
						"type": "boolean"
					},
					"departmentFinanceAndLaw": {
						"type": "boolean"
					},
					"acquisitionNegotiationTechnique": {
						"type": "boolean"
					},
					"rhetoricPresentationTechnique": {
						"type": "boolean"
					},
					"projectManagement": {
						"type": "boolean"
					},
					"dlAtEv": {
						"type": "boolean"
					},
					"apHeld": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"apAtEv": {
						"type": "boolean"
					},
					"zpHeld": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					},
					"zpAtEv": {
						"type": "boolean"
					},
					"offerAtEv": {
						"type": "boolean"
					},
					"abbreviation": {
						"type": "string"
					},
					"projectName": {
						"type": "string"
					},
					"internalProjectID": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"generationID": {
						"type": "number",
						"format": "double"
					},
					"memberStatus": {
						"$ref": "#/components/schemas/MemberStatusDto"
					},
					"lastname": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"memberID": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"excelBasics",
					"safetyTraining",
					"dataPrivacyTraining",
					"strategyAndOrganisation",
					"msPowerpoint",
					"departmentQualityManagement",
					"departmentNetwork",
					"departmentFinanceAndLaw",
					"acquisitionNegotiationTechnique",
					"rhetoricPresentationTechnique",
					"projectManagement",
					"dlAtEv",
					"apHeld",
					"apAtEv",
					"zpHeld",
					"zpAtEv",
					"offerAtEv",
					"abbreviation",
					"projectName",
					"internalProjectID",
					"generationID",
					"memberStatus",
					"lastname",
					"firstname",
					"memberID"
				],
				"type": "object",
				"description": "Type of the trainee progress with the internal project milestones and mandatory workshops feedback"
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "server",
		"version": "0.1.0",
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/JWTPayload"
								}
							}
						}
					}
				},
				"description": "Sends an httpOnly cookie to the client and retrieves id, username and corresponding permissions",
				"summary": "Logs in a user",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserLoginRequest"
							},
							"example": {
								"username": "w.luft",
								"password": "s3cre7"
							}
						}
					}
				}
			}
		},
		"/auth/me": {
			"get": {
				"operationId": "GetUserData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/JWTPayload"
								}
							}
						}
					}
				},
				"description": "Sends the user data of the currently logged in user to the client",
				"summary": "Retrieves own user data",
				"tags": [
					"Auth"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/auth/change-password": {
			"patch": {
				"operationId": "ChangePassword",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Updates the passwordHash in the database if the old password is correct",
				"summary": "Changes the users password",
				"tags": [
					"Auth"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserChangePasswordRequest"
							},
							"example": {
								"userName": "w.luft",
								"oldPassword": "s3cre7",
								"newPassword": "s3cre7",
								"userID": 8167
							}
						}
					}
				}
			}
		},
		"/auth/forgot-password": {
			"post": {
				"operationId": "SendPasswordResetLink",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "An email is sent with an password reset link and a key in the url to the user\r\nThe key used in the link is saved in the databse for the later verification",
				"summary": "Sends a password reset link to the user",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserForgotPasswordRequest"
							},
							"example": {
								"email": "w.luft@studentische-beratung.de"
							}
						}
					}
				}
			}
		},
		"/auth/reset-forgot-password": {
			"patch": {
				"operationId": "ResetPasswordWithKey",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "The user can set a new password by entering their mailadress and a new password\r\nThe mail and the key in the url are then checked to se if it is a valid pair\r\nIf the pair is valid the new password is stored",
				"summary": "Resets the password of a user",
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserResetPasswordRequest"
							},
							"example": {
								"email": "w.luft@studentische-beratung.de",
								"key": "1234567890",
								"newPassword": "s3cre7"
							}
						}
					}
				}
			}
		},
		"/auth/logout": {
			"post": {
				"operationId": "Logout",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Logs the user out by removing the jwt from the cookie",
				"summary": "Logs out the user",
				"tags": [
					"Auth"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/members": {
			"get": {
				"operationId": "GetMembers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/MemberPartialDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves a list of all members",
				"summary": "Get all members",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "CreateMember",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreateMemberResponseDto"
								}
							}
						}
					}
				},
				"description": "Creates a new member in the database and creates accounts\r\nfor the different systems (exchange, mediawiki)",
				"summary": "Create a new member",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": [
							"1"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "The member to create",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateMemberRequestDto",
								"description": "The member to create"
							},
							"example": {
								"vorname": "Max",
								"nachname": "Mustermann",
								"name": "m.mustermann",
								"geburtsdatum": "1990-01-01",
								"password": "s3cre7-123",
								"handy": "0123456789",
								"geschlecht": 1,
								"generation": 3,
								"traineeSeit": "2020-01-01",
								"email": "m.mustermann@email.de"
							}
						}
					}
				}
			}
		},
		"/members/{id}/image": {
			"get": {
				"operationId": "GetMemberImage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"mimeType": {},
										"base64": {}
									},
									"required": [
										"mimeType",
										"base64"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Retrieves the image of a member with the given `id`.\r\nReturns null with status code 204 if no image was found.",
				"summary": "Get image of member",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "The id of the member to retrieve the image from",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "SaveImage",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Saves the image of a member with the given `id`",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "The id of the member to save the image to",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "The image to save",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MemberImage",
								"description": "The image to save"
							},
							"example": {
								"base64": "test",
								"mimeType": "jpg"
							}
						}
					}
				}
			}
		},
		"/members/department-members": {
			"get": {
				"operationId": "GetMembersOfDepartments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/DepartmentMemberDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all members of the departments (this does not include the director of a department)",
				"summary": "Get all members of departments",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/members/directors": {
			"get": {
				"operationId": "GetDirectors",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/DirectorDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all current directors (if query parameter `current` is true) or all directors",
				"summary": "Get directors",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "Query parameter to specify if only the current directors should be retrieved",
						"in": "query",
						"name": "current",
						"required": true,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/members/{id}/status": {
			"patch": {
				"operationId": "UpdateMemberStatus",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Updates the status of an existing member\r\nUpdate can be done by members with certain permission\r\nUpdate can be done by member himself with an additional permission",
				"summary": "Update the status of a member",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": [
							"1"
						]
					}
				],
				"parameters": [
					{
						"description": "The id of the member to update",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "The new status of the member",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"memberStatus": {
										"type": "string"
									}
								},
								"required": [
									"memberStatus"
								],
								"type": "object",
								"description": "The new status of the member"
							},
							"example": {
								"memberStatus": "aktives Mitglied"
							}
						}
					}
				}
			}
		},
		"/members/departments": {
			"get": {
				"operationId": "GetDepartments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/DepartmentDetailsDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all departments",
				"summary": "Get departments",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/members/departments/{id}": {
			"put": {
				"operationId": "UpdateDepartment",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Updates the information of an existing department",
				"summary": "Update a department",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "The id of the department to update",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateDepartmentDto"
							},
							"example": {
								"linkObjectivePresentation": "https://example.com",
								"linkOrganigram": "https://example.com"
							}
						}
					}
				}
			}
		},
		"/members/languages": {
			"get": {
				"operationId": "GetLanguages",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/LanguageValue"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves the language values",
				"summary": "Get languages",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/members/edv-skills": {
			"get": {
				"operationId": "GetEDVSkills",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ItSkillsValue"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves the edv skills",
				"summary": "Get edv skills",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/members/permission-assignments": {
			"get": {
				"operationId": "GetPermissionAssignments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/PermissionAssignmentDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all directors and members permission assignments",
				"summary": "Get permission assignments",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/members/permissions": {
			"get": {
				"operationId": "GetPermissions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Permission"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves name, description and ID of all permissions",
				"summary": "Get permissions",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "AssignPermissionToMember",
				"responses": {
					"201": {
						"description": ""
					}
				},
				"description": "Create new permission for member",
				"summary": "Create permission",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "The permission to create",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AssignPermissionToMemberRequestDto",
								"description": "The permission to create"
							},
							"example": {
								"memberID": 8167,
								"permissionID": 8
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "UnassignPermissionFromMember",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Delete issued permission from member",
				"summary": "Delete permission",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "The permission to delete",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AssignPermissionToMemberRequestDto",
								"description": "The permission to delete"
							},
							"example": {
								"memberID": 8167,
								"permissionID": 8
							}
						}
					}
				}
			}
		},
		"/members/{id}": {
			"get": {
				"operationId": "GetMember",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MemberDetailsDto"
								}
							}
						}
					}
				},
				"description": "Retrieves a member specified by id\r\nReturns financial data iff member has permission or is himself",
				"summary": "Get single member by id",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "The id of the member to retrieve",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateMember",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Updates the information of an existing member. Update of critical fields can be done by member with certain permission.\r\nUpdate of critical and non critical fields can be done by member himself with additional permission",
				"summary": "Update a member",
				"tags": [
					"Members"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "The id of the member to update",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "The new information of the member",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/MemberDetailsDto",
								"description": "The new information of the member"
							},
							"example": {
								"memberId": 8111,
								"lastname": "Frye",
								"firstname": "Brandon-Lee",
								"gender": true,
								"birthday": "1990-06-06",
								"mobile": "0162/9846320",
								"jbtEmail": "b.frye@studentische-beratung.de",
								"memberStatus": {
									"memberStatusId": 1,
									"name": "Trainee"
								},
								"generation": 3,
								"internalProject": null,
								"traineeSince": "2011-05-01",
								"memberSince": "2012-12-01",
								"alumnusSince": null,
								"seniorSince": null,
								"activeSince": "2012-12-01",
								"passiveSince": null,
								"exitedSince": null,
								"department": {
									"departmentId": 5,
									"name": "Mitglieder",
									"shortName": "MIT"
								},
								"employer": "Versicherung International",
								"street1": "Woodsman Ave 61",
								"postalCode1": "70364",
								"city1": "Stuttgart",
								"phone1": null,
								"email1": "brandon-lee@gmx.de",
								"street2": "Budapester Straße 96",
								"postalCode2": "987654",
								"city2": "Reinesland Deutschland",
								"phone2": "07042/984365",
								"email2": "brandon-lee@gmx.de",
								"university": "Universität Hohenheim",
								"courseOfStudy": "Master of Financial Management",
								"studyStart": "2014-10-01",
								"studyEnd": null,
								"specializations": "Controlling und Unternehmensrechnung",
								"apprenticeship": null,
								"commitment": null,
								"canPL": "2013-12-23",
								"canQM": "2013-12-23",
								"lastChange": null,
								"drivingLicense": 0,
								"firstAidTraining": false,
								"accountHolder": "8912203a67b608ee8b1dc826b18df9ab1fa18cc28199268a80279cc543d838b280756f78ae495347663fad487573ab72d763e0b553931d883f4dd70acb45eb4a",
								"iban": "730984d2477de277a9d8c15860b9b703320d0195d898e0c64bf48856f425cb6cdf21240ed6d6c20b42d033bf8b623c4ec3dd9add15f9fbef743d1861e25cf703",
								"bic": "0ba933576f9624335f5b6773310f7429345a051310d9179c132c33c9e4b14c78822d5134d3ffa7b345f13f9b6906215f61aa605b0ea823844ccc47e7684d8a35",
								"languages": [
									{
										"memberId": 8111,
										"value": "Deutsch",
										"level": 5
									},
									{
										"memberId": 8111,
										"value": "English",
										"level": 3
									},
									{
										"memberId": 8111,
										"value": "Französisch",
										"level": 1
									}
								],
								"itSkills": [
									{
										"memberId": 8111,
										"value": "MS-Office",
										"level": 3
									},
									{
										"memberId": 8111,
										"value": "PHP",
										"level": 1
									}
								],
								"mentees": [],
								"mentor": null
							}
						}
					}
				}
			}
		},
		"/trainees": {
			"get": {
				"operationId": "GetTrainees",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/MembersFieldDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all current trainees",
				"summary": "Get current trainees",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/trainees/ip/{id}": {
			"get": {
				"operationId": "GetIP",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/InternalProjectDto"
								}
							}
						}
					}
				},
				"description": "Retrieves a single internal project by id",
				"summary": "Get an internal project",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"description": "id of the internal project",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateIP",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Updates an internal project by id",
				"summary": "Update an internal project",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"15"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the internal project",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "updated internal project",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InternalProjectDto",
								"description": "updated internal project"
							},
							"example": {
								"DLBeiEV": true,
								"APGehalten": "2021-01-01",
								"APBeiEV": true,
								"ZPGehalten": "2021-01-01",
								"ZPBeiEV": true,
								"AngebotBeiEV": true,
								"kickoff": "2021-01-01",
								"kuerzel": "string",
								"projektname": "string-long",
								"generationsBezeichnung": "Wintersemester 19/20",
								"generation": 15,
								"internesProjektID": 62,
								"projektmitglieder": [
									{
										"mitgliedID": 8478,
										"vorname": "Kellan",
										"nachname": "Mclaughlin"
									},
									{
										"mitgliedID": 8748,
										"vorname": "Mason",
										"nachname": "Vinson"
									}
								],
								"qualitaetsmanager": [
									{
										"mitgliedID": 8320,
										"vorname": "Radhika",
										"nachname": "Norton"
									},
									{
										"mitgliedID": 8333,
										"vorname": "Miruna",
										"nachname": "Decker"
									}
								]
							}
						}
					}
				}
			}
		},
		"/trainees/generations/{id}/trainee-choices": {
			"get": {
				"operationId": "GetTraineeChoicesOfGeneration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TraineeChoiceDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves choices of mentor, internal project and department of all trainees of given generation",
				"summary": "Get trainee choices",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the generation",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/trainees/generations": {
			"get": {
				"operationId": "GetGenerations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Generation"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves information about all generations",
				"summary": "Get generations",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/trainees/generations/{id}/motivation": {
			"get": {
				"operationId": "GetTraineeMotivation",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TraineeMotivationDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Gets letter of motivation form trainees of given generation",
				"summary": "Get trainee motivations",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the generation",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/trainees/generations/{id}/set-deadline": {
			"post": {
				"operationId": "SetElectionDeadline",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Sets \"wahl_start\" and \"wahl_ende\" for generation",
				"summary": "Set voting deadline",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the generation",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "start and end date of the voting",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateVotingDeadlinesRequestDto",
								"description": "start and end date of the voting"
							},
							"example": {
								"electionStart": "2021-01-01 18:00:00",
								"electionEnd": "2021-01-31 20:00:00"
							}
						}
					}
				}
			}
		},
		"/trainees/{id}/assignment": {
			"patch": {
				"operationId": "SetTraineeAssignment",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Sets choices of internesprojekt, mentor and department of member",
				"summary": "Set trainee assignment",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the trainee",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"description": "assignment of the trainee",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TraineeAssignmentDto",
								"description": "assignment of the trainee"
							},
							"example": {
								"ipID": 62,
								"mentorID": 8167,
								"departmentID": 1
							}
						}
					}
				}
			}
		},
		"/trainees/generations/{id}/mentors": {
			"get": {
				"operationId": "GetMentorsOfGeneration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/MentorDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all internal projects of a generation",
				"summary": "Get internal projects",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the generation",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/trainees/generations/{id}/add-mentor/{memberID}": {
			"post": {
				"operationId": "AddMentor",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Adds a mentor to a generation",
				"summary": "Add mentor",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the generation",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "id of the mentor",
						"in": "path",
						"name": "memberID",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/trainees/generations/{id}/internal-projects": {
			"get": {
				"operationId": "GetInternalProjectsOfGeneration",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/InternalProjectDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all internal projects of a generation",
				"summary": "Get internal projects",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the generation",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/trainees/ips/current": {
			"get": {
				"operationId": "GetCurrentIPs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/InternalProjectDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all current IPs",
				"summary": "Get current IPs",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/trainees/ips/all": {
			"get": {
				"operationId": "GetAllIPs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/InternalProjectDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all IPs",
				"summary": "Get all IPs",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/trainees/generations/{id}/trainee-progress": {
			"get": {
				"operationId": "GetTraineeProgress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TraineeProgressDto"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves all milestones of internal projects and workshop feedback of a generation",
				"summary": "Get progress of the trainee generation",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"14"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the generation",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/trainees/admission/{id}": {
			"post": {
				"operationId": "AdmitTrainee",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"description": "Admits a trainee which sets the active since state of the member to the current date and\r\nupdates the member status",
				"summary": "Admit a trainee",
				"tags": [
					"Trainees"
				],
				"security": [
					{
						"jwt": [
							"18"
						]
					}
				],
				"parameters": [
					{
						"description": "id of the trainee",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}